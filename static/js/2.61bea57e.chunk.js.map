{"version":3,"sources":["components/code/index.js","components/next/index.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../../node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/object-assign/index.js","../../node_modules/react-is/cjs/react-is.development.js","../../node_modules/react-is/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/checkPropTypes.js","../../node_modules/prop-types/factoryWithTypeCheckers.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../src/components/atoms/icons/chevron-down.js","../../src/components/atoms/icons/close.js","../../src/components/enums/selection_types.js","../../src/components/parts/caption.js","../../src/components/atoms/loading.js","../../src/components/parts/toggle.js","../../src/components/parts/dropdown_search.js","../../src/components/atoms/icons/arrow-left.js","../../src/components/parts/dropdown_header.js","../../src/components/parts/item.js","../../src/components/parts/dropdown_items.js","../../src/components/parts/dropdown_footer.js","../../src/components/parts/dropdown_range_inputs.js","../../src/components/parts/dropdown.js","../../src/components/mixins/custom_props_types.js","../../src/components/mixins/translate.js","../../src/index.js","../../src/components/mixins/arrays.js","components/view_resource/index.js"],"names":["Code","children","className","dark","language","style","gml","prism","showLineNumbers","NextPage","url","title","Container","to","styled","div","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","b","for","c","d","g","h","k","l","m","p","q","r","t","v","w","x","y","z","a","u","$$typeof","type","A","getOwnPropertySymbols","module","require$$0","Object","prototype","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","map","join","test3","split","forEach","letter","keys","shouldUseNative","checkPropTypes","typeSpecs","values","location","componentName","getStack","resetWarningCache","Function","call","bind","emptyFunction","emptyFunctionWithReset","shim","props","propName","propFullName","secret","ReactPropTypesSecret","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","PropTypes","require$$2","React","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","selectionTypes","SINGLE","MULTIPLE","RANGE","selectedItems","lang","onClick","caption","selectionType","captions","option","max","min","getCaption","classes","loading","disabled","countSelectedInCaption","label","handleToggleDropdown","selectedRange","cleanable","handleClearSelection","useState","handleSearchInput","setSearch","pattern","handleSearchOptions","onChange","placeholder","search","handleClickOnOption","selectionName","hasSearchInput","hasFooter","autocomplete","selectionOptions","key","prevProps","nextProps","JSON","selectionOptionsLength","minValue","maxValue","handleChange","newSelectedRange","Number","setSelectedRange","onFocus","setRangeItemsPosition","dropdownShow","selectionLabel","searchable","dropdownLists","selectionRef","allItems","onChangeAutocomplete","li","searchList","item","itemClassName","rangeItemsPosition","IValueAnsLabelShape","defaultTranslate","from","apply","cancel","Selection","rtl","defaultSelectedRange","translates","onHide","useRef","useEffect","setSelectionOptions","options","checked","setSelectedItems","document","show","compareMinAndMax","result","multipleValue","onShow","setDropdownShow","event","no_options","getTranslates","ref","newOptions","selectedOption","data","button","ViewRecourse","view","setView","Span","memo","span"],"mappings":"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","file":"static/js/2.61bea57e.chunk.js","sourcesContent":["import SyntaxHighlighter from 'react-syntax-highlighter';\nimport {prism} from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport {gml} from \"react-syntax-highlighter/src/styles/hljs\";\n\nconst Code = ({children, className, dark = true}) => {\n\n    return (\n        <SyntaxHighlighter\n            className={'rounded-sm py-3 ' + className}\n            language=\"jsx\"\n            style={dark ? gml : prism}\n            showLineNumbers\n        >\n            {children}\n        </SyntaxHighlighter>\n    );\n};\n\nexport default Code;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport styled from \"styled-components\";\nimport {ChevronRightIcon} from '@heroicons/react/outline'\n\nconst NextPage = ({url, title}) => {\n    return (\n        <Container className=\"d-flex align-items-center p-3 border-top\">\n            <span className=\"mr-auto\">Next page:</span>\n\n            <Link to={url} className=\"next-page-link\">\n                {title}\n\n                <ChevronRightIcon className=\"next-page-icon\"/>\n            </Link>\n        </Container>\n    );\n};\n\nexport default NextPage;\n\n// styles\n\nconst Container = styled.div`\n  margin-top: 80px;\n\n  .next-page-link {\n    position: relative;\n    display: inline-flex;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    justify-content: center;\n    cursor: pointer;\n    text-decoration: none;\n    padding: 0.25rem 0.5rem;\n    margin: -0.25rem -0.5rem;\n    border-radius: 7px;\n    color: rgb(0, 112, 243);\n    background-color: transparent;\n    border: none;\n    font-size: inherit;\n    line-height: inherit;\n    transition: background 0.2s ease 0s, color 0.2s ease 0s, box-shadow 0.2s ease 0s;\n    outline: none;\n\n    &:hover {\n      color: rgb(0, 112, 243);\n      background: rgba(0, 118, 255, 0.1);\n    }\n  }\n\n  .next-page-icon {\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import React from 'react';\n\nconst ChevronDownIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n        </svg>\n    );\n};\n\nexport default React.memo(ChevronDownIcon);\n","import React from 'react';\n\nconst CloseIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n    );\n};\n\nexport default React.memo(CloseIcon);\n","export const selectionTypes = {\n    SINGLE: 'single',\n    MULTIPLE: 'multiple',\n    RANGE: 'range',\n}","import React from 'react';\nimport {selectionTypes} from \"../enums\";\n\nconst Caption = ({countSelectedInCaption, selectionType, label, selectedItems = [], onClick, selectedRange, lang}) => {\n\n    const getCaption = () => {\n        let caption = label;\n\n        if (Array.isArray(selectedItems) && selectedItems.length && selectionType !== selectionTypes.RANGE) {\n            let captions = [];\n\n            for (let option of selectedItems) {\n                if (option && option.checked) {\n                    captions.push(option.label);\n                }\n            }\n\n            if (captions.length) {\n                if (captions.length > countSelectedInCaption) {\n                    caption = caption + ' (' + captions.length + ')';\n                } else {\n                    caption = captions.join('، ');\n                }\n            }\n        } else if (selectionType === selectionTypes.RANGE && selectedRange) {\n            const {min, max} = selectedRange;\n\n            if ((min && typeof min === \"object\" && min.value) || (max && typeof max === \"object\" && max.value)) {\n                caption = '';\n            }\n\n            if (min && typeof min === \"object\" && min.label && min.value) {\n                caption += lang.from + ' ';\n                caption += min.label;\n            }\n\n            if (max && typeof max === \"object\" && max.label && max.value) {\n                caption += ' ' + lang.to + ' ';\n                caption += max.label;\n            }\n        }\n\n        return caption;\n    }\n\n    return (\n        <div onClick={onClick} className=\"rs-selection-caption\">\n            <span>{getCaption()}</span>\n        </div>\n    );\n};\n\nexport default React.memo(Caption);\n","import React from 'react';\n\nconst SelectionLoading = () => {\n    return (\n        <div className=\"rs-selection-loading\">\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle1\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle2\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle3\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle4\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle5\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle6\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle7\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle8\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle9\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle10\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle11\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle12\"/>\n        </div>\n    );\n};\n\nexport default React.memo(SelectionLoading);\n","import React from 'react';\nimport ChevronDownIcon from \"../atoms/icons/chevron-down\";\nimport CloseIcon from \"../atoms/icons/close\";\nimport Caption from \"./caption\";\nimport SelectionLoading from \"../atoms/loading\";\n\nconst Toggle = ({\n                    label,\n                    selectionType,\n                    dropdownShow,\n                    handleToggleDropdown,\n                    cleanable,\n                    countSelectedInCaption,\n                    selectedItems,\n                    handleClearSelection,\n                    selectedRange,\n                    loading,\n                    disabled,\n                    lang\n                }) => {\n\n    let classes = (loading ? ' rs-selection-toggle--loading' : '');\n    classes += (disabled ? ' rs-selection-toggle--disabled' : '');\n\n    return (\n        <div className={\"rs-selection-toggle\" + classes}>\n            <Caption\n                countSelectedInCaption={countSelectedInCaption}\n                selectionType={selectionType}\n                selectedItems={selectedItems}\n                label={label}\n                onClick={() => (!loading && !disabled) ? handleToggleDropdown(!dropdownShow) : null}\n                selectedRange={selectedRange}\n                lang={lang}\n            />\n\n            {\n                loading ?\n                    <SelectionLoading/>\n                    :\n                    (\n                        (cleanable && Array.isArray(selectedItems) && selectedItems.length) ?\n                            <button className=\"rs-selection-clear-btn\" onClick={handleClearSelection}>\n                                <CloseIcon/>\n                            </button>\n                            :\n                            <div className=\"rs-selection-toggle-icon\">\n                                <ChevronDownIcon/>\n                            </div>\n                    )\n            }\n        </div>\n    );\n};\n\nexport default React.memo(Toggle);\n","import React, {useState} from 'react';\nimport CloseIcon from \"../atoms/icons/close\";\n\nconst SelectionDropdownSearch = ({handleSearchOptions,lang}) => {\n    const [search, setSearch] = useState('');\n\n    const handleSearchInput = (e) => {\n        const {value} = e.target;\n\n        setSearch(value ?? '');\n\n        const pattern = value ? value.toString().toLowerCase() : '';\n        handleSearchOptions(pattern);\n    }\n\n    return (\n        <div className=\"rs-selection-dropdown-search\">\n\n            <div className=\"rs-selection-dropdown-search__box\">\n                <input\n                    type=\"text\"\n                    value={search}\n                    onChange={handleSearchInput}\n                    className=\"rs-selection-dropdown-search__input rs-selection__input\"\n                    placeholder={lang.search}\n                />\n\n                {\n                    search && search !== '' ?\n                        <button onClick={handleSearchInput} className=\"rs-selection-dropdown-search__clear\">\n                            <CloseIcon/>\n                        </button>\n                        : ''\n                }\n            </div>\n\n        </div>\n    );\n};\n\nexport default React.memo(SelectionDropdownSearch);\n","import React from 'react';\n\nconst ArrowLeftIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n        </svg>\n    );\n};\n\nexport default React.memo(ArrowLeftIcon);\n","import React from 'react';\nimport ArrowLeftIcon from \"../atoms/icons/arrow-left\";\n\nconst SelectionDropdownHeader = ({selectionLabel, handleToggleDropdown}) => {\n\n    return (\n        <div className=\"rs-selection-dropdown-header\">\n            <div className=\"rs-selection-dropdown-header__title\">\n                {selectionLabel}\n            </div>\n\n            <button className=\"rs-selection-dropdown-header__back\" onClick={() => handleToggleDropdown(false)}>\n                <ArrowLeftIcon/>\n            </button>\n        </div>\n    );\n};\n\nexport default React.memo(SelectionDropdownHeader);\n","import React from 'react';\n\nconst SelectionDropdownItem = ({selectionName, option, handleClickOnOption}) => {\n\n    return (\n        <li\n            onClick={() => handleClickOnOption(option.value)}\n            className={('rs-dropdown-item--' + selectionName + '-' + option.value) + (option.checked ? ' rs-dropdown-items__checked' : '')}\n        >{option.label}</li>\n    );\n};\n\nexport default React.memo(SelectionDropdownItem);\n","import React from 'react';\nimport SelectionDropdownItem from \"./item\";\nimport {selectionTypes} from \"../enums\";\n\nconst SelectionDropdownItems = ({\n                                    selectionType,\n                                    selectionName,\n                                    selectionOptions,\n                                    handleClickOnOption,\n                                    rangeItemsPosition,\n                                    autocomplete,\n                                    searchable,\n                                    loading,\n                                    lang\n                                }) => {\n    // classes\n    // rs-has-footer-and-search\n    //\n    //\n\n    let hasSearchInput = searchable;\n    let hasFooter = true;\n\n    let classes = ('rs-dropdown-items--' + selectionType);\n\n    if (selectionType === selectionTypes.RANGE) {\n        classes += ' rs-dropdown-items--range-' + rangeItemsPosition;\n        hasSearchInput = true;\n    }\n\n    if (selectionType === selectionTypes.SINGLE) {\n        hasFooter = false;\n    }\n\n    classes += (hasSearchInput && hasFooter) ? ' rs-has-footer-and-search ' :\n        (\n            hasSearchInput && !hasFooter ? ' rs-has-search-and-no-footer ' :\n                (\n                    hasFooter && !hasSearchInput ? ' rs-has-footer-and-no-search ' : ''\n                )\n        );\n\n    return (\n        <ul className={\"rs-selection-dropdown-items \" + classes}>\n\n            {\n                autocomplete && !selectionOptions.length ?\n                    <li className=\"rs-selection-dropdown-items__no-options\">\n                        {\n                            loading ?\n                                lang.loading\n                                :\n                                lang.no_options\n                        }\n                    </li>\n                    :\n                    selectionOptions.map((option, key) =>\n                        <SelectionDropdownItem\n                            selectionName={selectionName}\n                            option={option}\n                            key={key}\n                            handleClickOnOption={handleClickOnOption}\n                        />\n                    )\n            }\n\n        </ul>\n    );\n};\n\nfunction propsAreEqual(prevProps, nextProps) {\n    return (\n        JSON.stringify(prevProps.selectionOptions) === JSON.stringify(nextProps.selectionOptions) &&\n        prevProps.rangeItemsPosition === nextProps.rangeItemsPosition &&\n        prevProps.autocomplete === nextProps.autocomplete &&\n        prevProps.loading === nextProps.loading &&\n        prevProps.searchable === nextProps.searchable\n    );\n}\n\nexport default React.memo(SelectionDropdownItems, propsAreEqual);\n","import React from 'react';\n\nconst SelectionDropdownFooter = ({handleToggleDropdown, selectionOptionsLength, lang}) => {\n    return (\n        <div className=\"rs-selection-dropdown-footer\">\n            {\n                selectionOptionsLength &&\n                <button type=\"button\" onClick={() => handleToggleDropdown(false)} className=\"rs-selection-dropdown-footer__btn-submit\">{lang.apply}</button>\n            }\n        </div>\n    );\n};\n\nexport default React.memo(SelectionDropdownFooter);\n","import React from 'react';\n\nconst SelectionDropdownRangeInputs = ({setRangeItemsPosition, selectedRange, setSelectedRange,lang}) => {\n    const {min, max} = selectedRange;\n    let minValue = (min && typeof min === \"object\" && min.value) ? min.value : '';\n    let maxValue = (max && typeof max === \"object\" && max.value) ? max.value : '';\n\n    const handleChange = (e, type) => {\n        const {value} = e.target;\n\n        let newSelectedRange = JSON.parse(JSON.stringify(selectedRange));\n\n        newSelectedRange[type] = {\n            value: Number(value),\n            label: value,\n        };\n\n        setSelectedRange(newSelectedRange);\n    }\n\n    return (\n        <div className=\"rs-selection-dropdown-range-inputs\">\n            <input type=\"tel\"\n                   value={minValue}\n                   className=\"rs-selection__input\"\n                   placeholder={lang.min}\n                   onChange={(e) => handleChange(e, 'min')}\n                   onFocus={() => setRangeItemsPosition('start')}\n            />\n\n            <span className=\"rs-selection-dropdown-range-inputs__span\">to</span>\n\n            <input type=\"tel\"\n                   value={maxValue}\n                   className=\"rs-selection__input\"\n                   placeholder={lang.max}\n                   onChange={(e) => handleChange(e, 'max')}\n                   onFocus={() => setRangeItemsPosition('end')}\n            />\n        </div>\n    );\n};\n\nexport default React.memo(SelectionDropdownRangeInputs);\n","import React from 'react';\nimport SelectionDropdownSearch from \"./dropdown_search\";\nimport SelectionDropdownHeader from \"./dropdown_header\";\nimport SelectionDropdownItems from \"./dropdown_items\";\nimport SelectionDropdownFooter from \"./dropdown_footer\";\nimport {selectionTypes} from \"../enums\";\nimport SelectionDropdownRangeInputs from \"./dropdown_range_inputs\";\n\n\nconst SelectionDropdown = ({\n                               dropdownShow,\n                               selectionLabel,\n                               selectionType,\n                               selectionName,\n                               searchable,\n                               selectionOptions,\n                               handleClickOnOption,\n                               rangeItemsPosition,\n                               setRangeItemsPosition,\n                               selectedRange,\n                               setSelectedRange,\n                               selectionRef,\n                               onChangeAutocomplete,\n                               handleToggleDropdown,\n                               autocomplete,\n                               loading,\n                               lang\n                           }) => {\n\n    const handleSearchOptions = (pattern) => {\n        const dropdownLists = selectionRef.current.querySelector('.rs-selection-dropdown-items');\n        const allItems = dropdownLists.querySelectorAll('li');\n\n        if (autocomplete && typeof onChangeAutocomplete === \"function\") {\n            onChangeAutocomplete(pattern);\n        } else if (pattern && pattern !== '') {\n            for (let li of allItems) {\n                li.style.display = 'none';\n            }\n\n            let searchList = selectionOptions.filter((item) => {\n                return (item.label.toString().toLowerCase().search(pattern) !== -1);\n            });\n\n            for (let item of searchList) {\n                const itemClassName = ('rs-dropdown-item--' + selectionName + '-' + item.value);\n                const li = dropdownLists.querySelector('li.' + itemClassName);\n\n                if (li) {\n                    li.style.display = 'block';\n                }\n            }\n        } else {\n            for (let li of allItems) {\n                li.style.display = 'block';\n            }\n        }\n    }\n\n    const classes = ('rs-selection-dropdown--' + selectionType) + (dropdownShow ? ' rs-selection-dropdown--show ' : '');\n\n    return (\n        <div className={\"rs-selection-dropdown \" + classes}>\n            <div className=\"rs-selection-dropdown__wrapper\">\n\n                <SelectionDropdownHeader\n                    selectionLabel={selectionLabel}\n                    handleToggleDropdown={handleToggleDropdown}\n                />\n\n                {\n                    searchable && selectionType !== selectionTypes.RANGE ?\n                        <SelectionDropdownSearch\n                            handleSearchOptions={handleSearchOptions}\n                            lang={lang}\n                        />\n                        :\n                        (\n                            selectionType === selectionTypes.RANGE ?\n                                <SelectionDropdownRangeInputs\n                                    setRangeItemsPosition={setRangeItemsPosition}\n                                    selectedRange={selectedRange}\n                                    setSelectedRange={setSelectedRange}\n                                    lang={lang}\n                                />\n                                : ''\n                        )\n                }\n\n                <SelectionDropdownItems\n                    selectionType={selectionType}\n                    selectionName={selectionName}\n                    selectionOptions={selectionOptions}\n                    handleClickOnOption={handleClickOnOption}\n                    rangeItemsPosition={rangeItemsPosition}\n                    autocomplete={autocomplete}\n                    searchable={searchable}\n                    loading={loading}\n                    lang={lang}\n                />\n\n                {\n                    selectionType !== selectionTypes.SINGLE &&\n                    <SelectionDropdownFooter\n                        selectionOptionsLength={(selectionOptions.length > 0)}\n                        handleToggleDropdown={handleToggleDropdown}\n                        lang={lang}\n                    />\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(SelectionDropdown);\n","import PropTypes from 'prop-types';\nimport {selectionTypes} from \"../enums\";\n\nexport const ISelectionTypes = () => {\n    return PropTypes.oneOf(Object.values(selectionTypes));\n}\n\nexport const ISelectionOption = () => {\n    return PropTypes.shape({\n        value: PropTypes.any,\n        label: PropTypes.any.isRequired,\n        checked: PropTypes.bool.isRequired,\n    }).isRequired\n}\n\nconst IValueAnsLabelShape = () => {\n    return PropTypes.shape({\n        value: PropTypes.any.isRequired,\n        label: PropTypes.any.isRequired,\n    })\n}\n\nexport const IDefaultSelectedRange = () => {\n    return PropTypes.shape({\n        min: IValueAnsLabelShape(),\n        max: IValueAnsLabelShape(),\n    })\n}\n\nexport const ITranslates = () => {\n    return PropTypes.shape({\n        label: PropTypes.shape({\n            from: PropTypes.string,\n            to: PropTypes.string\n        }),\n        placeholder: PropTypes.shape({\n            min: PropTypes.string,\n            max: PropTypes.string,\n            search: PropTypes.string,\n        }),\n        button: PropTypes.shape({\n            apply: PropTypes.string,\n            cancel: PropTypes.string,\n        }),\n        loading: PropTypes.string,\n        no_options: PropTypes.string\n    })\n}","export const defaultTranslate = {\n    label: {\n        from: \"from\",\n        to: \"to\"\n    },\n    placeholder: {\n        min: \"min\",\n        max: \"max\",\n        search: \"search\"\n    },\n    button: {\n        apply: \"Apply\",\n        cancel: \"cancel\"\n    },\n    loading: 'Loading...',\n    no_options: 'No Options'\n}\n\nexport const getTranslates = (translates) => {\n    let from = translates?.label?.from ? translates.label.from : defaultTranslate.label.from;\n    let to = translates?.label?.to ? translates.label.to : defaultTranslate.label.to;\n\n    let min = translates?.placeholder?.min ? translates.placeholder.min : defaultTranslate.placeholder.min;\n    let max = translates?.placeholder?.max ? translates.placeholder.max : defaultTranslate.placeholder.max;\n    let search = translates?.placeholder?.search ? translates.placeholder.search : defaultTranslate.placeholder.search;\n\n    let apply = translates?.button?.apply ? translates.button.apply : defaultTranslate.button.apply;\n    let cancel = translates?.button?.cancel ? translates.button.cancel : defaultTranslate.button.cancel;\n\n    let loading = translates?.loading ? translates.loading : defaultTranslate.loading;\n    let no_options = translates?.no_options ? translates.no_options : defaultTranslate.no_options;\n\n    return {\n        from,\n        to,\n        min,\n        max,\n        search,\n        apply,\n        cancel,\n        loading,\n        no_options,\n    }\n}","import React, {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport './assets/styles/styles.scss';\nimport Toggle from \"./components/parts/toggle\";\nimport SelectionDropdown from \"./components/parts/dropdown\";\nimport {IDefaultSelectedRange, ISelectionOption, ISelectionTypes, ITranslates} from \"./components/mixins/custom_props_types\";\nimport {array_unique} from \"./components/mixins/arrays\";\nimport {selectionTypes} from \"./components/enums\";\nimport {getTranslates} from \"./components/mixins/translate\";\n\n\nconst Selection = ({\n                       type = 'single',\n                       options,\n                       label,\n                       name,\n                       onChange,\n                       className,\n                       rtl = false,\n                       searchable = true,\n                       cleanable = true,\n                       autocomplete = false,\n                       onChangeAutocomplete,\n                       loading = false,\n                       disabled = false,\n                       countSelectedInCaption = 3,\n                       defaultSelectedRange = {},\n                       translates = {},\n                       onShow,\n                       onHide\n                   }) => {\n\n    const selectionRef = useRef(null);\n\n    // states\n    const [dropdownShow, setDropdownShow] = useState(false);\n    const [selectedItems, setSelectedItems] = useState([]);\n    const [selectedRange, setSelectedRange] = useState(defaultSelectedRange);\n    const [selectionOptions, setSelectionOptions] = useState(options);\n    const [rangeItemsPosition, setRangeItemsPosition] = useState('start');\n\n    // useEffect\n    useEffect(() => {\n        setSelectionOptions(options);\n\n        if (options.length && type !== selectionTypes.RANGE) {\n            let checked = [];\n\n            for (let option of options) {\n                if (option && option.checked) {\n                    checked.push(option);\n                }\n            }\n\n            setSelectedItems(checked);\n        }\n    }, [options]);\n\n    useEffect(() => {\n        if (type === selectionTypes.RANGE) {\n            setRangeItemsPosition('start');\n        }\n    }, [dropdownShow]);\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClickOutside);\n\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    })\n\n    // func\n    const handleToggleDropdown = (show, value = null) => {\n\n        if (!show && type === selectionTypes.RANGE) {\n            let newSelectedRange = JSON.parse(JSON.stringify(selectedRange));\n\n            newSelectedRange = compareMinAndMax(newSelectedRange);\n\n            setSelectedRange(newSelectedRange);\n\n            value = newSelectedRange;\n        }\n\n        if (!show && onChange && typeof onChange === 'function') {\n            let result = null;\n\n            switch (type) {\n                case selectionTypes.SINGLE:\n                    result = value ? {value: value} : null;\n                    break;\n\n                case selectionTypes.MULTIPLE:\n                    let multipleValue = [];\n\n                    if (selectedItems && selectedItems.length) {\n                        for (let option of selectedItems) {\n                            multipleValue.push(option.value);\n                        }\n                    }\n\n                    result = {value: multipleValue};\n                    break;\n\n                case selectionTypes.RANGE:\n\n                    const {min, max} = value ? value : selectedRange;\n\n                    result = {\n                        min: min ? min.value : null,\n                        max: max ? max.value : null,\n                    };\n                    break;\n            }\n\n            onChange(result);\n        }\n\n        if (show && typeof onShow === 'function') {\n            onShow(show)\n        }\n\n        if (!show && typeof onHide === 'function') {\n            onHide(show)\n        }\n\n        setDropdownShow(show);\n    }\n\n    function handleClickOutside(event) {\n        if (selectionRef.current && !selectionRef.current.contains(event.target) && dropdownShow) {\n            handleToggleDropdown(false);\n        }\n    }\n\n    const handleClearSelection = () => {\n        const newOptions = JSON.parse(JSON.stringify(selectionOptions));\n\n        for (let option of newOptions) {\n            option.checked = false;\n        }\n\n        setSelectionOptions(newOptions);\n\n        setSelectedItems([]);\n\n        if (!dropdownShow && onChange && typeof onChange === 'function') {\n            let result = null;\n\n            switch (type) {\n                case selectionTypes.SINGLE:\n                    result = null;\n                    break;\n\n                case selectionTypes.MULTIPLE:\n                    result = {value: []};\n                    break;\n\n                case selectionTypes.RANGE:\n                    result = {\n                        min: null,\n                        max: null,\n                    };\n                    break;\n            }\n\n            onChange(result);\n        }\n    }\n\n    const handleClickOnOption = (value) => {\n        switch (type) {\n            case selectionTypes.SINGLE:\n                if (value) {\n                    const newOptions = JSON.parse(JSON.stringify(selectionOptions));\n                    let selectedOption = null;\n\n                    for (let option of newOptions) {\n                        option.checked = (option.value === value);\n\n                        if (option.value === value) {\n                            selectedOption = option;\n                        }\n                    }\n\n                    setSelectionOptions(newOptions);\n\n                    setSelectedItems(selectedOption ? [selectedOption] : []);\n\n                    handleToggleDropdown(false, selectedOption ? selectedOption.value : '');\n                }\n                break;\n\n            case selectionTypes.MULTIPLE:\n                if (value) {\n                    const newOptions = JSON.parse(JSON.stringify(selectionOptions));\n                    let selectedOption = [];\n\n                    for (let option of newOptions) {\n                        if (option && option.value === value) {\n                            option.checked = !option.checked;\n                        }\n\n                        if (option.checked) {\n                            selectedOption.push(option)\n                        }\n                    }\n\n                    setSelectionOptions(newOptions);\n\n                    setSelectedItems(array_unique(selectedOption));\n                }\n                break;\n            case selectionTypes.RANGE:\n                const newOptions = JSON.parse(JSON.stringify(selectionOptions));\n\n                let newSelectedRange = JSON.parse(JSON.stringify(selectedRange));\n\n                let selectedOption = null;\n\n                for (let option of newOptions) {\n                    if (option && option.value === value) {\n                        selectedOption = option;\n                    }\n                }\n\n                const data = {\n                    value: (selectedOption && typeof selectedOption === 'object') ? selectedOption.value : '',\n                    label: (selectedOption && typeof selectedOption === 'object') ? selectedOption.label : '',\n                };\n\n                if (rangeItemsPosition === 'start') {\n                    newSelectedRange.min = data;\n\n                    setRangeItemsPosition('end');\n                } else {\n                    newSelectedRange.max = data;\n\n                    newSelectedRange = compareMinAndMax(newSelectedRange);\n\n                    handleToggleDropdown(false);\n                }\n\n                setSelectedRange(newSelectedRange);\n\n                break;\n        }\n    }\n\n    const compareMinAndMax = (value) => {\n        const {min, max} = value;\n\n        if (min && Number(min.value) && max && Number(max.value) && Number(min.value) > Number(max.value)) {\n            value.min = max;\n            value.max = min;\n        }\n\n        return value;\n    }\n\n    const lang = getTranslates(translates);\n\n    return (\n        <div ref={selectionRef} className={\"rs-selection-container \" + (rtl ? 'rs-rtl-selection ' : '') + (className ?? '')}>\n            <Toggle\n                label={label}\n                selectionType={type}\n                dropdownShow={dropdownShow}\n                cleanable={cleanable}\n                handleToggleDropdown={handleToggleDropdown}\n                countSelectedInCaption={countSelectedInCaption}\n                selectedItems={selectedItems}\n                handleClearSelection={handleClearSelection}\n                selectedRange={selectedRange}\n                loading={loading}\n                disabled={disabled}\n                lang={lang}\n            />\n\n            <SelectionDropdown\n                dropdownShow={dropdownShow}\n                selectionLabel={label}\n                selectionType={type}\n                selectionName={name}\n                searchable={searchable}\n                selectionOptions={selectionOptions}\n                handleClickOnOption={(value) => handleClickOnOption(value)}\n                handleToggleDropdown={handleToggleDropdown}\n                rangeItemsPosition={rangeItemsPosition}\n                setRangeItemsPosition={setRangeItemsPosition}\n                selectedRange={selectedRange}\n                setSelectedRange={setSelectedRange}\n                selectionRef={selectionRef}\n                onChangeAutocomplete={onChangeAutocomplete}\n                autocomplete={autocomplete}\n                loading={loading}\n                lang={lang}\n            />\n        </div>\n    )\n}\n\nSelection.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    type: ISelectionTypes().isRequired,\n    options: PropTypes.arrayOf(ISelectionOption()).isRequired,\n    onChange: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    countSelectedInCaption: PropTypes.number,\n    rtl: PropTypes.bool,\n    searchable: PropTypes.bool,\n    cleanable: PropTypes.bool,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    autocomplete: PropTypes.bool,\n    onChangeAutocomplete: PropTypes.func,\n    onShow: PropTypes.func,\n    onHide: PropTypes.func,\n    defaultSelectedRange: IDefaultSelectedRange(),\n    translates: ITranslates()\n}\n\nexport default React.memo(Selection);\n","export const array_unique = (array) => {\n    return array.filter(function (item, key) {\n        return (array.indexOf(item) === key);\n    })\n};","import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport {CodeIcon} from '@heroicons/react/outline'\n\nconst ViewRecourse = ({title, children}) => {\n    const [view, setView] = useState(false);\n\n    return (\n        <Container>\n            <div className=\"d-flex align-items-center\">\n                <h5 className=\"font-weight-bold mr-auto\">{title}</h5>\n\n                <button className=\"btn btn-light d-flex align-items-center\" onClick={() => setView(!view)}>\n                    <CodeIcon className=\"view-icon mr-1\"/>\n                    <Span>View source</Span>\n                </button>\n            </div>\n\n            <div className={\"mt-2 \" + (view ? 'd-block' : 'd-none')}>\n                {children}\n            </div>\n        </Container>\n    );\n};\n\nexport default React.memo(ViewRecourse);\n\n// styles\n\nconst Container = styled.div`\n\n  .view-icon {\n    width: 24px;\n    height: 24px;\n  }\n`\n\nconst Span = styled.span`\n  font-size: 12px;\n`"],"sourceRoot":""}