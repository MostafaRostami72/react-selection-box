{"version":3,"sources":["components/code/index.js","components/next/index.js","../../node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/object-assign/index.js","../../node_modules/react-is/cjs/react-is.development.js","../../node_modules/react-is/index.js","../../node_modules/prop-types/checkPropTypes.js","../../node_modules/prop-types/factoryWithTypeCheckers.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../src/components/atoms/icons/chevron-down.js","../../src/components/atoms/icons/close.js","../../src/components/enums/selection_types.js","../../src/components/parts/caption.js","../../src/components/atoms/loading.js","../../src/components/parts/toggle.js","../../src/components/parts/dropdown_search.js","../../src/components/atoms/icons/arrow-left.js","../../src/components/parts/dropdown_header.js","../../src/components/parts/item.js","../../src/components/parts/dropdown_items.js","../../src/components/parts/dropdown_footer.js","../../src/components/parts/dropdown_range_inputs.js","../../src/components/parts/dropdown.js","../../src/components/mixins/custom_props_types.js","../../src/index.js","../../src/components/mixins/translate.js","../../src/components/mixins/arrays.js","components/view_resource/index.js"],"names":["Code","children","className","dark","language","style","gml","prism","showLineNumbers","NextPage","url","title","Container","to","styled","div","b","Symbol","for","c","d","e","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","a","u","$$typeof","type","A","getOwnPropertySymbols","module","require$$0","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","toObject","val","TypeError","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","join","test3","split","forEach","letter","keys","err","checkPropTypes","typeSpecs","values","location","componentName","getStack","resetWarningCache","Function","call","bind","emptyFunction","emptyFunctionWithReset","shim","props","propName","propFullName","secret","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","PropTypes","require$$2","React","memo","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","selectionTypes","SINGLE","MULTIPLE","RANGE","countSelectedInCaption","selectionType","label","selectedItems","selectedRange","lang","onClick","caption","Array","isArray","length","captions","option","checked","push","min","max","value","from","getCaption","dropdownShow","handleToggleDropdown","cleanable","handleClearSelection","loading","disabled","classes","Caption","SelectionLoading","CloseIcon","ChevronDownIcon","handleSearchOptions","useState","search","setSearch","handleSearchInput","target","pattern","toString","toLowerCase","onChange","placeholder","selectionLabel","ArrowLeftIcon","handleClickOnOption","selectionName","selectionOptions","hasSearchInput","searchable","hasFooter","rangeItemsPosition","autocomplete","no_options","key","SelectionDropdownItem","prevProps","nextProps","JSON","stringify","selectionOptionsLength","apply","setRangeItemsPosition","setSelectedRange","maxValue","handleChange","newSelectedRange","parse","Number","onFocus","selectionRef","onChangeAutocomplete","SelectionDropdownHeader","SelectionDropdownSearch","dropdownLists","current","querySelector","allItems","querySelectorAll","display","filter","item","li","SelectionDropdownRangeInputs","SelectionDropdownItems","SelectionDropdownFooter","IValueAnsLabelShape","Selection","options","rtl","defaultSelectedRange","translates","onShow","onHide","useRef","setDropdownShow","setSelectedItems","setSelectionOptions","useEffect","document","addEventListener","handleClickOutside","removeEventListener","show","compareMinAndMax","result","multipleValue","event","contains","button","cancel","ref","Toggle","newOptions","SelectionDropdown","selectedOption","indexOf","data","propTypes","ViewRecourse","view","setView","Span","span"],"mappings":"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","file":"static/js/2.c10683fb.chunk.js","sourcesContent":["import SyntaxHighlighter from 'react-syntax-highlighter';\nimport {prism} from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport {gml} from \"react-syntax-highlighter/src/styles/hljs\";\n\nconst Code = ({children, className, dark = true}) => {\n\n    return (\n        <SyntaxHighlighter\n            className={'rounded-sm py-3 ' + className}\n            language=\"jsx\"\n            style={dark ? gml : prism}\n            showLineNumbers\n        >\n            {children}\n        </SyntaxHighlighter>\n    );\n};\n\nexport default Code;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport styled from \"styled-components\";\nimport {ChevronRightIcon} from '@heroicons/react/outline'\n\nconst NextPage = ({url, title}) => {\n    return (\n        <Container className=\"d-flex align-items-center p-3 border-top\">\n            <span className=\"mr-auto\">Next page:</span>\n\n            <Link to={url} className=\"next-page-link\">\n                {title}\n\n                <ChevronRightIcon className=\"next-page-icon\"/>\n            </Link>\n        </Container>\n    );\n};\n\nexport default NextPage;\n\n// styles\n\nconst Container = styled.div`\n  margin-top: 80px;\n\n  .next-page-link {\n    position: relative;\n    display: inline-flex;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    justify-content: center;\n    cursor: pointer;\n    text-decoration: none;\n    padding: 0.25rem 0.5rem;\n    margin: -0.25rem -0.5rem;\n    border-radius: 7px;\n    color: rgb(0, 112, 243);\n    background-color: transparent;\n    border: none;\n    font-size: inherit;\n    line-height: inherit;\n    transition: background 0.2s ease 0s, color 0.2s ease 0s, box-shadow 0.2s ease 0s;\n    outline: none;\n\n    &:hover {\n      color: rgb(0, 112, 243);\n      background: rgba(0, 118, 255, 0.1);\n    }\n  }\n\n  .next-page-icon {\n    width: 24px;\n    height: 24px;\n  }\n`;\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React from 'react';\n\nconst ChevronDownIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n        </svg>\n    );\n};\n\nexport default React.memo(ChevronDownIcon);\n","import React from 'react';\n\nconst CloseIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n    );\n};\n\nexport default React.memo(CloseIcon);\n","export const selectionTypes = {\n    SINGLE: 'single',\n    MULTIPLE: 'multiple',\n    RANGE: 'range',\n}","import React from 'react';\nimport {selectionTypes} from \"../enums\";\n\nconst Caption = ({countSelectedInCaption, selectionType, label, selectedItems = [], onClick, selectedRange, lang}) => {\n\n    const getCaption = () => {\n        let caption = label;\n\n        if (Array.isArray(selectedItems) && selectedItems.length && selectionType !== selectionTypes.RANGE) {\n            let captions = [];\n\n            for (let option of selectedItems) {\n                if (option && option.checked) {\n                    captions.push(option.label);\n                }\n            }\n\n            if (captions.length) {\n                if (captions.length > countSelectedInCaption) {\n                    caption = caption + ' (' + captions.length + ')';\n                } else {\n                    caption = captions.join('، ');\n                }\n            }\n        } else if (selectionType === selectionTypes.RANGE && selectedRange) {\n            const {min, max} = selectedRange;\n\n            if ((min && typeof min === \"object\" && min.value) || (max && typeof max === \"object\" && max.value)) {\n                caption = '';\n            }\n\n            if (min && typeof min === \"object\" && min.label && min.value) {\n                caption += lang.from + ' ';\n                caption += min.label;\n            }\n\n            if (max && typeof max === \"object\" && max.label && max.value) {\n                caption += ' ' + lang.to + ' ';\n                caption += max.label;\n            }\n        }\n\n        return caption;\n    }\n\n    return (\n        <div onClick={onClick} className=\"rs-selection-caption\">\n            <span>{getCaption()}</span>\n        </div>\n    );\n};\n\nexport default React.memo(Caption);\n","import React from 'react';\n\nconst SelectionLoading = () => {\n    return (\n        <div className=\"rs-selection-loading\">\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle1\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle2\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle3\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle4\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle5\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle6\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle7\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle8\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle9\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle10\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle11\"/>\n            <div className=\"rs-selection-loading__circle rs-selection-loading__circle12\"/>\n        </div>\n    );\n};\n\nexport default React.memo(SelectionLoading);\n","import React from 'react';\nimport ChevronDownIcon from \"../atoms/icons/chevron-down\";\nimport CloseIcon from \"../atoms/icons/close\";\nimport Caption from \"./caption\";\nimport SelectionLoading from \"../atoms/loading\";\n\nconst Toggle = ({\n                    label,\n                    selectionType,\n                    dropdownShow,\n                    handleToggleDropdown,\n                    cleanable,\n                    countSelectedInCaption,\n                    selectedItems,\n                    handleClearSelection,\n                    selectedRange,\n                    loading,\n                    disabled,\n                    lang\n                }) => {\n\n    let classes = (loading ? ' rs-selection-toggle--loading' : '');\n    classes += (disabled ? ' rs-selection-toggle--disabled' : '');\n\n    return (\n        <div className={\"rs-selection-toggle\" + classes}>\n            <Caption\n                countSelectedInCaption={countSelectedInCaption}\n                selectionType={selectionType}\n                selectedItems={selectedItems}\n                label={label}\n                onClick={() => (!loading && !disabled) ? handleToggleDropdown(!dropdownShow) : null}\n                selectedRange={selectedRange}\n                lang={lang}\n            />\n\n            {\n                loading ?\n                    <SelectionLoading/>\n                    :\n                    (\n                        (cleanable && Array.isArray(selectedItems) && selectedItems.length) ?\n                            <button className=\"rs-selection-clear-btn\" onClick={handleClearSelection}>\n                                <CloseIcon/>\n                            </button>\n                            :\n                            <div className=\"rs-selection-toggle-icon\">\n                                <ChevronDownIcon/>\n                            </div>\n                    )\n            }\n        </div>\n    );\n};\n\nexport default React.memo(Toggle);\n","import React, {useState} from 'react';\nimport CloseIcon from \"../atoms/icons/close\";\n\nconst SelectionDropdownSearch = ({handleSearchOptions,lang}) => {\n    const [search, setSearch] = useState('');\n\n    const handleSearchInput = (e) => {\n        const {value} = e.target;\n\n        setSearch(value ?? '');\n\n        const pattern = value ? value.toString().toLowerCase() : '';\n        handleSearchOptions(pattern);\n    }\n\n    return (\n        <div className=\"rs-selection-dropdown-search\">\n\n            <div className=\"rs-selection-dropdown-search__box\">\n                <input\n                    type=\"text\"\n                    value={search}\n                    onChange={handleSearchInput}\n                    className=\"rs-selection-dropdown-search__input rs-selection__input\"\n                    placeholder={lang.search}\n                />\n\n                {\n                    search && search !== '' ?\n                        <button onClick={handleSearchInput} className=\"rs-selection-dropdown-search__clear\">\n                            <CloseIcon/>\n                        </button>\n                        : ''\n                }\n            </div>\n\n        </div>\n    );\n};\n\nexport default React.memo(SelectionDropdownSearch);\n","import React from 'react';\n\nconst ArrowLeftIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n        </svg>\n    );\n};\n\nexport default React.memo(ArrowLeftIcon);\n","import React from 'react';\nimport ArrowLeftIcon from \"../atoms/icons/arrow-left\";\n\nconst SelectionDropdownHeader = ({selectionLabel, handleToggleDropdown}) => {\n\n    return (\n        <div className=\"rs-selection-dropdown-header\">\n            <div className=\"rs-selection-dropdown-header__title\">\n                {selectionLabel}\n            </div>\n\n            <button className=\"rs-selection-dropdown-header__back\" onClick={() => handleToggleDropdown(false)}>\n                <ArrowLeftIcon/>\n            </button>\n        </div>\n    );\n};\n\nexport default React.memo(SelectionDropdownHeader);\n","import React from 'react';\n\nconst SelectionDropdownItem = ({selectionName, option, handleClickOnOption}) => {\n\n    return (\n        <li\n            onClick={() => handleClickOnOption(option.value)}\n            className={('rs-dropdown-item--' + selectionName + '-' + option.value) + (option.checked ? ' rs-dropdown-items__checked' : '')}\n        >{option.label}</li>\n    );\n};\n\nexport default React.memo(SelectionDropdownItem);\n","import React from 'react';\nimport SelectionDropdownItem from \"./item\";\nimport {selectionTypes} from \"../enums\";\n\nconst SelectionDropdownItems = ({\n                                    selectionType,\n                                    selectionName,\n                                    selectionOptions,\n                                    handleClickOnOption,\n                                    rangeItemsPosition,\n                                    autocomplete,\n                                    searchable,\n                                    loading,\n                                    lang\n                                }) => {\n    // classes\n    // rs-has-footer-and-search\n    //\n    //\n\n    let hasSearchInput = searchable;\n    let hasFooter = true;\n\n    let classes = ('rs-dropdown-items--' + selectionType);\n\n    if (selectionType === selectionTypes.RANGE) {\n        classes += ' rs-dropdown-items--range-' + rangeItemsPosition;\n        hasSearchInput = true;\n    }\n\n    if (selectionType === selectionTypes.SINGLE) {\n        hasFooter = false;\n    }\n\n    classes += (hasSearchInput && hasFooter) ? ' rs-has-footer-and-search ' :\n        (\n            hasSearchInput && !hasFooter ? ' rs-has-search-and-no-footer ' :\n                (\n                    hasFooter && !hasSearchInput ? ' rs-has-footer-and-no-search ' : ''\n                )\n        );\n\n    return (\n        <ul className={\"rs-selection-dropdown-items \" + classes}>\n\n            {\n                autocomplete && !selectionOptions.length ?\n                    <li className=\"rs-selection-dropdown-items__no-options\">\n                        {\n                            loading ?\n                                lang.loading\n                                :\n                                lang.no_options\n                        }\n                    </li>\n                    :\n                    selectionOptions.map((option, key) =>\n                        <SelectionDropdownItem\n                            selectionName={selectionName}\n                            option={option}\n                            key={key}\n                            handleClickOnOption={handleClickOnOption}\n                        />\n                    )\n            }\n\n        </ul>\n    );\n};\n\nfunction propsAreEqual(prevProps, nextProps) {\n    return (\n        JSON.stringify(prevProps.selectionOptions) === JSON.stringify(nextProps.selectionOptions) &&\n        prevProps.rangeItemsPosition === nextProps.rangeItemsPosition &&\n        prevProps.autocomplete === nextProps.autocomplete &&\n        prevProps.loading === nextProps.loading &&\n        prevProps.searchable === nextProps.searchable\n    );\n}\n\nexport default React.memo(SelectionDropdownItems, propsAreEqual);\n","import React from 'react';\n\nconst SelectionDropdownFooter = ({handleToggleDropdown, selectionOptionsLength, lang}) => {\n    return (\n        <div className=\"rs-selection-dropdown-footer\">\n            {\n                selectionOptionsLength &&\n                <button type=\"button\" onClick={() => handleToggleDropdown(false)} className=\"rs-selection-dropdown-footer__btn-submit\">{lang.apply}</button>\n            }\n        </div>\n    );\n};\n\nexport default React.memo(SelectionDropdownFooter);\n","import React from 'react';\n\nconst SelectionDropdownRangeInputs = ({setRangeItemsPosition, selectedRange, setSelectedRange,lang}) => {\n    const {min, max} = selectedRange;\n    let minValue = (min && typeof min === \"object\" && min.value) ? min.value : '';\n    let maxValue = (max && typeof max === \"object\" && max.value) ? max.value : '';\n\n    const handleChange = (e, type) => {\n        const {value} = e.target;\n\n        let newSelectedRange = JSON.parse(JSON.stringify(selectedRange));\n\n        newSelectedRange[type] = {\n            value: Number(value),\n            label: value,\n        };\n\n        setSelectedRange(newSelectedRange);\n    }\n\n    return (\n        <div className=\"rs-selection-dropdown-range-inputs\">\n            <input type=\"tel\"\n                   value={minValue}\n                   className=\"rs-selection__input\"\n                   placeholder={lang.min}\n                   onChange={(e) => handleChange(e, 'min')}\n                   onFocus={() => setRangeItemsPosition('start')}\n            />\n\n            <span className=\"rs-selection-dropdown-range-inputs__span\">to</span>\n\n            <input type=\"tel\"\n                   value={maxValue}\n                   className=\"rs-selection__input\"\n                   placeholder={lang.max}\n                   onChange={(e) => handleChange(e, 'max')}\n                   onFocus={() => setRangeItemsPosition('end')}\n            />\n        </div>\n    );\n};\n\nexport default React.memo(SelectionDropdownRangeInputs);\n","import React from 'react';\nimport SelectionDropdownSearch from \"./dropdown_search\";\nimport SelectionDropdownHeader from \"./dropdown_header\";\nimport SelectionDropdownItems from \"./dropdown_items\";\nimport SelectionDropdownFooter from \"./dropdown_footer\";\nimport {selectionTypes} from \"../enums\";\nimport SelectionDropdownRangeInputs from \"./dropdown_range_inputs\";\n\n\nconst SelectionDropdown = ({\n                               dropdownShow,\n                               selectionLabel,\n                               selectionType,\n                               selectionName,\n                               searchable,\n                               selectionOptions,\n                               handleClickOnOption,\n                               rangeItemsPosition,\n                               setRangeItemsPosition,\n                               selectedRange,\n                               setSelectedRange,\n                               selectionRef,\n                               onChangeAutocomplete,\n                               handleToggleDropdown,\n                               autocomplete,\n                               loading,\n                               lang\n                           }) => {\n\n    const handleSearchOptions = (pattern) => {\n        const dropdownLists = selectionRef.current.querySelector('.rs-selection-dropdown-items');\n        const allItems = dropdownLists.querySelectorAll('li');\n\n        if (autocomplete && typeof onChangeAutocomplete === \"function\") {\n            onChangeAutocomplete(pattern);\n        } else if (pattern && pattern !== '') {\n            for (let li of allItems) {\n                li.style.display = 'none';\n            }\n\n            let searchList = selectionOptions.filter((item) => {\n                return (item.label.toString().toLowerCase().search(pattern) !== -1);\n            });\n\n            for (let item of searchList) {\n                const itemClassName = ('rs-dropdown-item--' + selectionName + '-' + item.value);\n                const li = dropdownLists.querySelector('li.' + itemClassName);\n\n                if (li) {\n                    li.style.display = 'block';\n                }\n            }\n        } else {\n            for (let li of allItems) {\n                li.style.display = 'block';\n            }\n        }\n    }\n\n    const classes = ('rs-selection-dropdown--' + selectionType) + (dropdownShow ? ' rs-selection-dropdown--show ' : '');\n\n    return (\n        <div className={\"rs-selection-dropdown \" + classes}>\n            <div className=\"rs-selection-dropdown__wrapper\">\n\n                <SelectionDropdownHeader\n                    selectionLabel={selectionLabel}\n                    handleToggleDropdown={handleToggleDropdown}\n                />\n\n                {\n                    searchable && selectionType !== selectionTypes.RANGE ?\n                        <SelectionDropdownSearch\n                            handleSearchOptions={handleSearchOptions}\n                            lang={lang}\n                        />\n                        :\n                        (\n                            selectionType === selectionTypes.RANGE ?\n                                <SelectionDropdownRangeInputs\n                                    setRangeItemsPosition={setRangeItemsPosition}\n                                    selectedRange={selectedRange}\n                                    setSelectedRange={setSelectedRange}\n                                    lang={lang}\n                                />\n                                : ''\n                        )\n                }\n\n                <SelectionDropdownItems\n                    selectionType={selectionType}\n                    selectionName={selectionName}\n                    selectionOptions={selectionOptions}\n                    handleClickOnOption={handleClickOnOption}\n                    rangeItemsPosition={rangeItemsPosition}\n                    autocomplete={autocomplete}\n                    searchable={searchable}\n                    loading={loading}\n                    lang={lang}\n                />\n\n                {\n                    selectionType !== selectionTypes.SINGLE &&\n                    <SelectionDropdownFooter\n                        selectionOptionsLength={(selectionOptions.length > 0)}\n                        handleToggleDropdown={handleToggleDropdown}\n                        lang={lang}\n                    />\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(SelectionDropdown);\n","import PropTypes from 'prop-types';\nimport {selectionTypes} from \"../enums\";\n\nexport const ISelectionTypes = () => {\n    return PropTypes.oneOf(Object.values(selectionTypes));\n}\n\nexport const ISelectionOption = () => {\n    return PropTypes.shape({\n        value: PropTypes.any,\n        label: PropTypes.any.isRequired,\n        checked: PropTypes.bool.isRequired,\n    }).isRequired\n}\n\nconst IValueAnsLabelShape = () => {\n    return PropTypes.shape({\n        value: PropTypes.any.isRequired,\n        label: PropTypes.any.isRequired,\n    })\n}\n\nexport const IDefaultSelectedRange = () => {\n    return PropTypes.shape({\n        min: IValueAnsLabelShape(),\n        max: IValueAnsLabelShape(),\n    })\n}\n\nexport const ITranslates = () => {\n    return PropTypes.shape({\n        label: PropTypes.shape({\n            from: PropTypes.string,\n            to: PropTypes.string\n        }),\n        placeholder: PropTypes.shape({\n            min: PropTypes.string,\n            max: PropTypes.string,\n            search: PropTypes.string,\n        }),\n        button: PropTypes.shape({\n            apply: PropTypes.string,\n            cancel: PropTypes.string,\n        }),\n        loading: PropTypes.string,\n        no_options: PropTypes.string\n    })\n}","import React, {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport './assets/styles/styles.scss';\nimport Toggle from \"./components/parts/toggle\";\nimport SelectionDropdown from \"./components/parts/dropdown\";\nimport {IDefaultSelectedRange, ISelectionOption, ISelectionTypes, ITranslates} from \"./components/mixins/custom_props_types\";\nimport {array_unique} from \"./components/mixins/arrays\";\nimport {selectionTypes} from \"./components/enums\";\nimport {getTranslates} from \"./components/mixins/translate\";\n\n\nconst Selection = ({\n                       type = 'single',\n                       options,\n                       label,\n                       name,\n                       onChange,\n                       className,\n                       rtl = false,\n                       searchable = true,\n                       cleanable = true,\n                       autocomplete = false,\n                       onChangeAutocomplete,\n                       loading = false,\n                       disabled = false,\n                       countSelectedInCaption = 3,\n                       defaultSelectedRange = {},\n                       translates = {},\n                       onShow,\n                       onHide\n                   }) => {\n\n    const selectionRef = useRef(null);\n\n    // states\n    const [dropdownShow, setDropdownShow] = useState(false);\n    const [selectedItems, setSelectedItems] = useState([]);\n    const [selectedRange, setSelectedRange] = useState(defaultSelectedRange);\n    const [selectionOptions, setSelectionOptions] = useState(options);\n    const [rangeItemsPosition, setRangeItemsPosition] = useState('start');\n\n    // useEffect\n    useEffect(() => {\n        setSelectionOptions(options);\n\n        if (options.length && type !== selectionTypes.RANGE) {\n            let checked = [];\n\n            for (let option of options) {\n                if (option && option.checked) {\n                    checked.push(option);\n                }\n            }\n\n            setSelectedItems(checked);\n        }\n    }, [options]);\n\n    useEffect(() => {\n        if (type === selectionTypes.RANGE) {\n            setRangeItemsPosition('start');\n        }\n    }, [dropdownShow]);\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClickOutside);\n\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    })\n\n    // func\n    const handleToggleDropdown = (show, value = null) => {\n\n        if (!show && type === selectionTypes.RANGE) {\n            let newSelectedRange = JSON.parse(JSON.stringify(selectedRange));\n\n            newSelectedRange = compareMinAndMax(newSelectedRange);\n\n            setSelectedRange(newSelectedRange);\n\n            value = newSelectedRange;\n        }\n\n        if (!show && onChange && typeof onChange === 'function') {\n            let result = null;\n\n            switch (type) {\n                case selectionTypes.SINGLE:\n                    result = value ? {value: value} : null;\n                    break;\n\n                case selectionTypes.MULTIPLE:\n                    let multipleValue = [];\n\n                    if (selectedItems && selectedItems.length) {\n                        for (let option of selectedItems) {\n                            multipleValue.push(option.value);\n                        }\n                    }\n\n                    result = {value: multipleValue};\n                    break;\n\n                case selectionTypes.RANGE:\n\n                    const {min, max} = value ? value : selectedRange;\n\n                    result = {\n                        min: min ? min.value : null,\n                        max: max ? max.value : null,\n                    };\n                    break;\n            }\n\n            onChange(result);\n        }\n\n        if (show && typeof onShow === 'function') {\n            onShow(show)\n        }\n\n        if (!show && typeof onHide === 'function') {\n            onHide(show)\n        }\n\n        setDropdownShow(show);\n    }\n\n    function handleClickOutside(event) {\n        if (selectionRef.current && !selectionRef.current.contains(event.target) && dropdownShow) {\n            handleToggleDropdown(false);\n        }\n    }\n\n    const handleClearSelection = () => {\n        const newOptions = JSON.parse(JSON.stringify(selectionOptions));\n\n        for (let option of newOptions) {\n            option.checked = false;\n        }\n\n        setSelectionOptions(newOptions);\n\n        setSelectedItems([]);\n\n        if (!dropdownShow && onChange && typeof onChange === 'function') {\n            let result = null;\n\n            switch (type) {\n                case selectionTypes.SINGLE:\n                    result = null;\n                    break;\n\n                case selectionTypes.MULTIPLE:\n                    result = {value: []};\n                    break;\n\n                case selectionTypes.RANGE:\n                    result = {\n                        min: null,\n                        max: null,\n                    };\n                    break;\n            }\n\n            onChange(result);\n        }\n    }\n\n    const handleClickOnOption = (value) => {\n        switch (type) {\n            case selectionTypes.SINGLE:\n                if (value) {\n                    const newOptions = JSON.parse(JSON.stringify(selectionOptions));\n                    let selectedOption = null;\n\n                    for (let option of newOptions) {\n                        option.checked = (option.value === value);\n\n                        if (option.value === value) {\n                            selectedOption = option;\n                        }\n                    }\n\n                    setSelectionOptions(newOptions);\n\n                    setSelectedItems(selectedOption ? [selectedOption] : []);\n\n                    handleToggleDropdown(false, selectedOption ? selectedOption.value : '');\n                }\n                break;\n\n            case selectionTypes.MULTIPLE:\n                if (value) {\n                    const newOptions = JSON.parse(JSON.stringify(selectionOptions));\n                    let selectedOption = [];\n\n                    for (let option of newOptions) {\n                        if (option && option.value === value) {\n                            option.checked = !option.checked;\n                        }\n\n                        if (option.checked) {\n                            selectedOption.push(option)\n                        }\n                    }\n\n                    setSelectionOptions(newOptions);\n\n                    setSelectedItems(array_unique(selectedOption));\n                }\n                break;\n            case selectionTypes.RANGE:\n                const newOptions = JSON.parse(JSON.stringify(selectionOptions));\n\n                let newSelectedRange = JSON.parse(JSON.stringify(selectedRange));\n\n                let selectedOption = null;\n\n                for (let option of newOptions) {\n                    if (option && option.value === value) {\n                        selectedOption = option;\n                    }\n                }\n\n                const data = {\n                    value: (selectedOption && typeof selectedOption === 'object') ? selectedOption.value : '',\n                    label: (selectedOption && typeof selectedOption === 'object') ? selectedOption.label : '',\n                };\n\n                if (rangeItemsPosition === 'start') {\n                    newSelectedRange.min = data;\n\n                    setRangeItemsPosition('end');\n                } else {\n                    newSelectedRange.max = data;\n\n                    newSelectedRange = compareMinAndMax(newSelectedRange);\n\n                    handleToggleDropdown(false);\n                }\n\n                setSelectedRange(newSelectedRange);\n\n                break;\n        }\n    }\n\n    const compareMinAndMax = (value) => {\n        const {min, max} = value;\n\n        if (min && Number(min.value) && max && Number(max.value) && Number(min.value) > Number(max.value)) {\n            value.min = max;\n            value.max = min;\n        }\n\n        return value;\n    }\n\n    const lang = getTranslates(translates);\n\n    return (\n        <div ref={selectionRef} className={\"rs-selection-container \" + (rtl ? 'rs-rtl-selection ' : '') + (className ?? '')}>\n            <Toggle\n                label={label}\n                selectionType={type}\n                dropdownShow={dropdownShow}\n                cleanable={cleanable}\n                handleToggleDropdown={handleToggleDropdown}\n                countSelectedInCaption={countSelectedInCaption}\n                selectedItems={selectedItems}\n                handleClearSelection={handleClearSelection}\n                selectedRange={selectedRange}\n                loading={loading}\n                disabled={disabled}\n                lang={lang}\n            />\n\n            <SelectionDropdown\n                dropdownShow={dropdownShow}\n                selectionLabel={label}\n                selectionType={type}\n                selectionName={name}\n                searchable={searchable}\n                selectionOptions={selectionOptions}\n                handleClickOnOption={(value) => handleClickOnOption(value)}\n                handleToggleDropdown={handleToggleDropdown}\n                rangeItemsPosition={rangeItemsPosition}\n                setRangeItemsPosition={setRangeItemsPosition}\n                selectedRange={selectedRange}\n                setSelectedRange={setSelectedRange}\n                selectionRef={selectionRef}\n                onChangeAutocomplete={onChangeAutocomplete}\n                autocomplete={autocomplete}\n                loading={loading}\n                lang={lang}\n            />\n        </div>\n    )\n}\n\nSelection.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    type: ISelectionTypes().isRequired,\n    options: PropTypes.arrayOf(ISelectionOption()).isRequired,\n    onChange: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    countSelectedInCaption: PropTypes.number,\n    rtl: PropTypes.bool,\n    searchable: PropTypes.bool,\n    cleanable: PropTypes.bool,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    autocomplete: PropTypes.bool,\n    onChangeAutocomplete: PropTypes.func,\n    onShow: PropTypes.func,\n    onHide: PropTypes.func,\n    defaultSelectedRange: IDefaultSelectedRange(),\n    translates: ITranslates()\n}\n\nexport default React.memo(Selection);\n","export const defaultTranslate = {\n    label: {\n        from: \"from\",\n        to: \"to\"\n    },\n    placeholder: {\n        min: \"min\",\n        max: \"max\",\n        search: \"search\"\n    },\n    button: {\n        apply: \"Apply\",\n        cancel: \"cancel\"\n    },\n    loading: 'Loading...',\n    no_options: 'No Options'\n}\n\nexport const getTranslates = (translates) => {\n    let from = translates?.label?.from ? translates.label.from : defaultTranslate.label.from;\n    let to = translates?.label?.to ? translates.label.to : defaultTranslate.label.to;\n\n    let min = translates?.placeholder?.min ? translates.placeholder.min : defaultTranslate.placeholder.min;\n    let max = translates?.placeholder?.max ? translates.placeholder.max : defaultTranslate.placeholder.max;\n    let search = translates?.placeholder?.search ? translates.placeholder.search : defaultTranslate.placeholder.search;\n\n    let apply = translates?.button?.apply ? translates.button.apply : defaultTranslate.button.apply;\n    let cancel = translates?.button?.cancel ? translates.button.cancel : defaultTranslate.button.cancel;\n\n    let loading = translates?.loading ? translates.loading : defaultTranslate.loading;\n    let no_options = translates?.no_options ? translates.no_options : defaultTranslate.no_options;\n\n    return {\n        from,\n        to,\n        min,\n        max,\n        search,\n        apply,\n        cancel,\n        loading,\n        no_options,\n    }\n}","export const array_unique = (array) => {\n    return array.filter(function (item, key) {\n        return (array.indexOf(item) === key);\n    })\n};","import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport {CodeIcon} from '@heroicons/react/outline'\n\nconst ViewRecourse = ({title, children}) => {\n    const [view, setView] = useState(false);\n\n    return (\n        <Container>\n            <div className=\"d-flex align-items-center\">\n                <h5 className=\"font-weight-bold mr-auto\">{title}</h5>\n\n                <button className=\"btn btn-light d-flex align-items-center\" onClick={() => setView(!view)}>\n                    <CodeIcon className=\"view-icon mr-1\"/>\n                    <Span>View source</Span>\n                </button>\n            </div>\n\n            <div className={\"mt-2 \" + (view ? 'd-block' : 'd-none')}>\n                {children}\n            </div>\n        </Container>\n    );\n};\n\nexport default React.memo(ViewRecourse);\n\n// styles\n\nconst Container = styled.div`\n\n  .view-icon {\n    width: 24px;\n    height: 24px;\n  }\n`\n\nconst Span = styled.span`\n  font-size: 12px;\n`"],"sourceRoot":""}