{"version":3,"sources":["components/examples/single/pre.js","countries.js","components/examples/features.js","components/examples/single/fullExample.js","components/examples/multiple/fullExample.js","components/examples/multiple/pre.js","components/examples/range/pre.js","components/examples/range/fullExample.js","components/examples/single/asyncExample.js","components/examples/single/asyncPre.js","components/examples/multiple/asyncExample.js","pages/examples.js"],"names":["SingleSelectionPre","withDefault","React","memo","countryListAlpha","SelectionFeatures","features","setFeatures","type","handleChange","e","st","target","name","value","checked","fieldName","replaceAll","newFeatures","JSON","parse","stringify","Container","className","Object","keys","map","feature","key","htmlFor","id","onChange","styled","div","SingleSelection","useState","searchable","cleanable","loading","disabled","rtl","countSelectedInCaption","label","options","forEach","i","push","console","log","translates","placeholder","search","MultipleSelection","features2","from","to","button","apply","MultipleSelectionPre","RangeSelectionPre","RangeSelection","getPricesOptions","defaultSelectedRange","min","max","setTime","undefined","AsyncSingleSelection","autoComplete","setAutoComplete","autocomplete","onChangeAutocomplete","pattern","clearTimeout","setTimeout","searchList","filter","item","toString","toLowerCase","AsyncMultipleSelectionPre","AsyncMultipleSelection","Examples","title","url"],"mappings":"uMAGMA,EAAqB,SAAC,GAAyB,IAAD,IAAvBC,mBAAuB,SAChD,OACI,cAAC,IAAD,obAgBmBA,EAAc,4CAAgD,QAhBjF,0oBAuDOC,MAAMC,KAAKH,G,gBC5DbI,EAAmB,CAC5B,GAAM,cACN,GAAM,UACN,GAAM,UACN,GAAM,iBACN,GAAM,UACN,GAAM,SACN,GAAM,WACN,GAAM,aACN,GAAM,sBACN,GAAM,YACN,GAAM,UACN,GAAM,QACN,GAAM,YACN,GAAM,UACN,GAAM,aACN,GAAM,gBACN,GAAM,UACN,GAAM,aACN,GAAM,WACN,GAAM,UACN,GAAM,UACN,GAAM,SACN,GAAM,QACN,GAAM,UACN,GAAM,SACN,GAAM,mCACN,GAAM,mCACN,GAAM,yBACN,GAAM,WACN,GAAM,gBACN,GAAM,SACN,GAAM,uCACN,GAAM,oBACN,GAAM,WACN,GAAM,eACN,GAAM,UACN,GAAM,aACN,GAAM,WACN,GAAM,WACN,GAAM,SACN,GAAM,uBACN,GAAM,iCACN,GAAM,OACN,GAAM,QACN,GAAM,QACN,GAAM,mBACN,GAAM,gCACN,GAAM,WACN,GAAM,gBACN,GAAM,yCACN,GAAM,cACN,GAAM,qBACN,GAAM,aACN,GAAM,UACN,GAAM,OACN,GAAM,aACN,GAAM,SACN,GAAM,UACN,GAAM,mBACN,GAAM,UACN,GAAM,WACN,GAAM,WACN,GAAM,2BACN,GAAM,UACN,GAAM,QACN,GAAM,cACN,GAAM,oBACN,GAAM,UACN,GAAM,UACN,GAAM,WACN,GAAM,WACN,GAAM,oCACN,GAAM,sBACN,GAAM,OACN,GAAM,UACN,GAAM,SACN,GAAM,gBACN,GAAM,mBACN,GAAM,oCACN,GAAM,QACN,GAAM,eACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,YACN,GAAM,SACN,GAAM,YACN,GAAM,UACN,GAAM,aACN,GAAM,OACN,GAAM,YACN,GAAM,WACN,GAAM,SACN,GAAM,gBACN,GAAM,SACN,GAAM,QACN,GAAM,oCACN,GAAM,iBACN,GAAM,WACN,GAAM,YACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,YACN,GAAM,6BACN,GAAM,OACN,GAAM,UACN,GAAM,cACN,GAAM,SACN,GAAM,QACN,GAAM,UACN,GAAM,QACN,GAAM,SACN,GAAM,SACN,GAAM,aACN,GAAM,QACN,GAAM,WACN,GAAM,8CACN,GAAM,0BACN,GAAM,SACN,GAAM,aACN,GAAM,yCACN,GAAM,SACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,gBACN,GAAM,YACN,GAAM,aACN,GAAM,QACN,GAAM,aACN,GAAM,SACN,GAAM,WACN,GAAM,WACN,GAAM,OACN,GAAM,QACN,GAAM,yBACN,GAAM,aACN,GAAM,aACN,GAAM,YACN,GAAM,UACN,GAAM,SACN,GAAM,mCACN,GAAM,4BACN,GAAM,SACN,GAAM,WACN,GAAM,aACN,GAAM,aACN,GAAM,UACN,GAAM,aACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,QACN,GAAM,oBACN,GAAM,gBACN,GAAM,cACN,GAAM,YACN,GAAM,cACN,GAAM,UACN,GAAM,OACN,GAAM,iBACN,GAAM,iCACN,GAAM,SACN,GAAM,OACN,GAAM,WACN,GAAM,QACN,GAAM,sBACN,GAAM,SACN,GAAM,mBACN,GAAM,WACN,GAAM,OACN,GAAM,oBACN,GAAM,WACN,GAAM,SACN,GAAM,WACN,GAAM,cACN,GAAM,QACN,GAAM,8BACN,GAAM,UACN,GAAM,2BACN,GAAM,SACN,GAAM,aACN,GAAM,sBACN,GAAM,+CACN,GAAM,wBACN,GAAM,cACN,GAAM,6BACN,GAAM,4BACN,GAAM,mCACN,GAAM,QACN,GAAM,aACN,GAAM,wBACN,GAAM,eACN,GAAM,UACN,GAAM,SACN,GAAM,aACN,GAAM,eACN,GAAM,YACN,GAAM,4BACN,GAAM,WACN,GAAM,WACN,GAAM,kBACN,GAAM,UACN,GAAM,eACN,GAAM,+CACN,GAAM,cACN,GAAM,QACN,GAAM,YACN,GAAM,cACN,GAAM,WACN,GAAM,yBACN,GAAM,SACN,GAAM,cACN,GAAM,uBACN,GAAM,SACN,GAAM,aACN,GAAM,+BACN,GAAM,WACN,GAAM,cAC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","file":"static/js/11.8cd00c42.chunk.js","sourcesContent":["import React from 'react';\nimport Code from \"../../code\";\n\nconst SingleSelectionPre = ({withDefault=false}) => {\n    return (\n        <Code>\n            {\n                `\nimport React from 'react';\nimport Selection from 'react-selection-box'\nimport {countryListAlpha} from \"../../../countries\";\n\nconst SingleSelection = () => {\n\n    const options = () => {\n        let options = [];\n\n        Object.keys(countryListAlpha).forEach((key, i) => {\n            options.push({\n                value: key,\n                label: countryListAlpha[key],\n                checked: ${withDefault ? '(key === \\'CA\\') // selected default Canada' : 'false'}\n            })\n        })\n\n        return options;\n    }\n\n    const handleChange = (value) => {\n        console.log(value)\n    }\n\n    return (\n        <div>\n\n            <Selection\n                type=\"single\"\n                name=\"countries\"\n                label=\"Select Countries\"\n                options={options()}\n                onChange={handleChange}\n                translates={{\n                    placeholder: {\n                        search: \"Search countries\"\n                    }\n                }}\n            />\n\n\n        </div>\n    );\n};\n\nexport default SingleSelection;\n                `\n            }\n        </Code>\n    );\n};\n\nexport default React.memo(SingleSelectionPre);\n","export const countryListAlpha = {\n    \"AF\": \"Afghanistan\",\n    \"AL\": \"Albania\",\n    \"DZ\": \"Algeria\",\n    \"AS\": \"American Samoa\",\n    \"AD\": \"Andorra\",\n    \"AO\": \"Angola\",\n    \"AI\": \"Anguilla\",\n    \"AQ\": \"Antarctica\",\n    \"AG\": \"Antigua and Barbuda\",\n    \"AR\": \"Argentina\",\n    \"AM\": \"Armenia\",\n    \"AW\": \"Aruba\",\n    \"AU\": \"Australia\",\n    \"AT\": \"Austria\",\n    \"AZ\": \"Azerbaijan\",\n    \"BS\": \"Bahamas (the)\",\n    \"BH\": \"Bahrain\",\n    \"BD\": \"Bangladesh\",\n    \"BB\": \"Barbados\",\n    \"BY\": \"Belarus\",\n    \"BE\": \"Belgium\",\n    \"BZ\": \"Belize\",\n    \"BJ\": \"Benin\",\n    \"BM\": \"Bermuda\",\n    \"BT\": \"Bhutan\",\n    \"BO\": \"Bolivia (Plurinational State of)\",\n    \"BQ\": \"Bonaire, Sint Eustatius and Saba\",\n    \"BA\": \"Bosnia and Herzegovina\",\n    \"BW\": \"Botswana\",\n    \"BV\": \"Bouvet Island\",\n    \"BR\": \"Brazil\",\n    \"IO\": \"British Indian Ocean Territory (the)\",\n    \"BN\": \"Brunei Darussalam\",\n    \"BG\": \"Bulgaria\",\n    \"BF\": \"Burkina Faso\",\n    \"BI\": \"Burundi\",\n    \"CV\": \"Cabo Verde\",\n    \"KH\": \"Cambodia\",\n    \"CM\": \"Cameroon\",\n    \"CA\": \"Canada\",\n    \"KY\": \"Cayman Islands (the)\",\n    \"CF\": \"Central African Republic (the)\",\n    \"TD\": \"Chad\",\n    \"CL\": \"Chile\",\n    \"CN\": \"China\",\n    \"CX\": \"Christmas Island\",\n    \"CC\": \"Cocos (Keeling) Islands (the)\",\n    \"CO\": \"Colombia\",\n    \"KM\": \"Comoros (the)\",\n    \"CD\": \"Congo (the Democratic Republic of the)\",\n    \"CG\": \"Congo (the)\",\n    \"CK\": \"Cook Islands (the)\",\n    \"CR\": \"Costa Rica\",\n    \"HR\": \"Croatia\",\n    \"CU\": \"Cuba\",\n    \"CW\": \"Curaçao\",\n    \"CY\": \"Cyprus\",\n    \"CZ\": \"Czechia\",\n    \"CI\": \"Côte d'Ivoire\",\n    \"DK\": \"Denmark\",\n    \"DJ\": \"Djibouti\",\n    \"DM\": \"Dominica\",\n    \"DO\": \"Dominican Republic (the)\",\n    \"EC\": \"Ecuador\",\n    \"EG\": \"Egypt\",\n    \"SV\": \"El Salvador\",\n    \"GQ\": \"Equatorial Guinea\",\n    \"ER\": \"Eritrea\",\n    \"EE\": \"Estonia\",\n    \"SZ\": \"Eswatini\",\n    \"ET\": \"Ethiopia\",\n    \"FK\": \"Falkland Islands (the) [Malvinas]\",\n    \"FO\": \"Faroe Islands (the)\",\n    \"FJ\": \"Fiji\",\n    \"FI\": \"Finland\",\n    \"FR\": \"France\",\n    \"GF\": \"French Guiana\",\n    \"PF\": \"French Polynesia\",\n    \"TF\": \"French Southern Territories (the)\",\n    \"GA\": \"Gabon\",\n    \"GM\": \"Gambia (the)\",\n    \"GE\": \"Georgia\",\n    \"DE\": \"Germany\",\n    \"GH\": \"Ghana\",\n    \"GI\": \"Gibraltar\",\n    \"GR\": \"Greece\",\n    \"GL\": \"Greenland\",\n    \"GD\": \"Grenada\",\n    \"GP\": \"Guadeloupe\",\n    \"GU\": \"Guam\",\n    \"GT\": \"Guatemala\",\n    \"GG\": \"Guernsey\",\n    \"GN\": \"Guinea\",\n    \"GW\": \"Guinea-Bissau\",\n    \"GY\": \"Guyana\",\n    \"HT\": \"Haiti\",\n    \"HM\": \"Heard Island and McDonald Islands\",\n    \"VA\": \"Holy See (the)\",\n    \"HN\": \"Honduras\",\n    \"HK\": \"Hong Kong\",\n    \"HU\": \"Hungary\",\n    \"IS\": \"Iceland\",\n    \"IN\": \"India\",\n    \"ID\": \"Indonesia\",\n    \"IR\": \"Iran (Islamic Republic of)\",\n    \"IQ\": \"Iraq\",\n    \"IE\": \"Ireland\",\n    \"IM\": \"Isle of Man\",\n    \"IL\": \"Israel\",\n    \"IT\": \"Italy\",\n    \"JM\": \"Jamaica\",\n    \"JP\": \"Japan\",\n    \"JE\": \"Jersey\",\n    \"JO\": \"Jordan\",\n    \"KZ\": \"Kazakhstan\",\n    \"KE\": \"Kenya\",\n    \"KI\": \"Kiribati\",\n    \"KP\": \"Korea (the Democratic People's Republic of)\",\n    \"KR\": \"Korea (the Republic of)\",\n    \"KW\": \"Kuwait\",\n    \"KG\": \"Kyrgyzstan\",\n    \"LA\": \"Lao People's Democratic Republic (the)\",\n    \"LV\": \"Latvia\",\n    \"LB\": \"Lebanon\",\n    \"LS\": \"Lesotho\",\n    \"LR\": \"Liberia\",\n    \"LY\": \"Libya\",\n    \"LI\": \"Liechtenstein\",\n    \"LT\": \"Lithuania\",\n    \"LU\": \"Luxembourg\",\n    \"MO\": \"Macao\",\n    \"MG\": \"Madagascar\",\n    \"MW\": \"Malawi\",\n    \"MY\": \"Malaysia\",\n    \"MV\": \"Maldives\",\n    \"ML\": \"Mali\",\n    \"MT\": \"Malta\",\n    \"MH\": \"Marshall Islands (the)\",\n    \"MQ\": \"Martinique\",\n    \"MR\": \"Mauritania\",\n    \"MU\": \"Mauritius\",\n    \"YT\": \"Mayotte\",\n    \"MX\": \"Mexico\",\n    \"FM\": \"Micronesia (Federated States of)\",\n    \"MD\": \"Moldova (the Republic of)\",\n    \"MC\": \"Monaco\",\n    \"MN\": \"Mongolia\",\n    \"ME\": \"Montenegro\",\n    \"MS\": \"Montserrat\",\n    \"MA\": \"Morocco\",\n    \"MZ\": \"Mozambique\",\n    \"MM\": \"Myanmar\",\n    \"NA\": \"Namibia\",\n    \"NR\": \"Nauru\",\n    \"NP\": \"Nepal\",\n    \"NL\": \"Netherlands (the)\",\n    \"NC\": \"New Caledonia\",\n    \"NZ\": \"New Zealand\",\n    \"NI\": \"Nicaragua\",\n    \"NE\": \"Niger (the)\",\n    \"NG\": \"Nigeria\",\n    \"NU\": \"Niue\",\n    \"NF\": \"Norfolk Island\",\n    \"MP\": \"Northern Mariana Islands (the)\",\n    \"NO\": \"Norway\",\n    \"OM\": \"Oman\",\n    \"PK\": \"Pakistan\",\n    \"PW\": \"Palau\",\n    \"PS\": \"Palestine, State of\",\n    \"PA\": \"Panama\",\n    \"PG\": \"Papua New Guinea\",\n    \"PY\": \"Paraguay\",\n    \"PE\": \"Peru\",\n    \"PH\": \"Philippines (the)\",\n    \"PN\": \"Pitcairn\",\n    \"PL\": \"Poland\",\n    \"PT\": \"Portugal\",\n    \"PR\": \"Puerto Rico\",\n    \"QA\": \"Qatar\",\n    \"MK\": \"Republic of North Macedonia\",\n    \"RO\": \"Romania\",\n    \"RU\": \"Russian Federation (the)\",\n    \"RW\": \"Rwanda\",\n    \"RE\": \"Réunion\",\n    \"BL\": \"Saint Barthélemy\",\n    \"SH\": \"Saint Helena, Ascension and Tristan da Cunha\",\n    \"KN\": \"Saint Kitts and Nevis\",\n    \"LC\": \"Saint Lucia\",\n    \"MF\": \"Saint Martin (French part)\",\n    \"PM\": \"Saint Pierre and Miquelon\",\n    \"VC\": \"Saint Vincent and the Grenadines\",\n    \"WS\": \"Samoa\",\n    \"SM\": \"San Marino\",\n    \"ST\": \"Sao Tome and Principe\",\n    \"SA\": \"Saudi Arabia\",\n    \"SN\": \"Senegal\",\n    \"RS\": \"Serbia\",\n    \"SC\": \"Seychelles\",\n    \"SL\": \"Sierra Leone\",\n    \"SG\": \"Singapore\",\n    \"SX\": \"Sint Maarten (Dutch part)\",\n    \"SK\": \"Slovakia\",\n    \"SI\": \"Slovenia\",\n    \"SB\": \"Solomon Islands\",\n    \"SO\": \"Somalia\",\n    \"ZA\": \"South Africa\",\n    \"GS\": \"South Georgia and the South Sandwich Islands\",\n    \"SS\": \"South Sudan\",\n    \"ES\": \"Spain\",\n    \"LK\": \"Sri Lanka\",\n    \"SD\": \"Sudan (the)\",\n    \"SR\": \"Suriname\",\n    \"SJ\": \"Svalbard and Jan Mayen\",\n    \"SE\": \"Sweden\",\n    \"CH\": \"Switzerland\",\n    \"SY\": \"Syrian Arab Republic\",\n    \"TW\": \"Taiwan\",\n    \"TJ\": \"Tajikistan\",\n    \"TZ\": \"Tanzania, United Republic of\",\n    \"TH\": \"Thailand\",\n    \"TL\": \"Timor-Leste\",\n    \"TG\": \"Togo\",\n    \"TK\": \"Tokelau\",\n    \"TO\": \"Tonga\",\n    \"TT\": \"Trinidad and Tobago\",\n    \"TN\": \"Tunisia\",\n    \"TR\": \"Turkey\",\n    \"TM\": \"Turkmenistan\",\n    \"TC\": \"Turks and Caicos Islands (the)\",\n    \"TV\": \"Tuvalu\",\n    \"UG\": \"Uganda\",\n    \"UA\": \"Ukraine\",\n    \"AE\": \"United Arab Emirates (the)\",\n    \"GB\": \"United Kingdom of Great Britain and Northern Ireland (the)\",\n    \"UM\": \"United States Minor Outlying Islands (the)\",\n    \"US\": \"United States of America (the)\",\n    \"UY\": \"Uruguay\",\n    \"UZ\": \"Uzbekistan\",\n    \"VU\": \"Vanuatu\",\n    \"VE\": \"Venezuela (Bolivarian Republic of)\",\n    \"VN\": \"Viet Nam\",\n    \"VG\": \"Virgin Islands (British)\",\n    \"VI\": \"Virgin Islands (U.S.)\",\n    \"WF\": \"Wallis and Futuna\",\n    \"EH\": \"Western Sahara\",\n    \"YE\": \"Yemen\",\n    \"ZM\": \"Zambia\",\n    \"ZW\": \"Zimbabwe\",\n    \"AX\": \"Åland Islands\"\n};","import React from 'react';\nimport styled from \"styled-components\";\n\nconst SelectionFeatures = ({features, setFeatures, type = 'single'}) => {\n\n    const handleChange = (e, st) => {\n        const {name, value, checked} = e.target;\n        const fieldName = name.replaceAll(type,'')\n\n        const newFeatures = JSON.parse(JSON.stringify(features))\n\n        newFeatures[fieldName] = (fieldName === 'countSelectedInCaption') ? value : checked\n\n        setFeatures(newFeatures);\n    }\n\n    return (\n        <Container className=\"mt-3 d-flex align-items-center\">\n            {\n                features ?\n                    Object.keys(features).map((feature, key) => {\n                        if (type === 'multiple' && feature === 'countSelectedInCaption') {\n                            return (\n                                <div className=\"form-group border-left ml-2 pl-3\">\n                                    <label htmlFor={feature}>Show selected in caption</label>\n                                    <input type=\"number\" className=\"form-control\" name={feature + type} id={feature + type} value={features[feature]} onChange={(e) => handleChange(e, type)}/>\n                                </div>\n                            )\n                        } else if (feature !== 'countSelectedInCaption') {\n                            return (\n                                <div className=\"custom-control custom-checkbox mr-2\" key={key}>\n                                    <input type=\"checkbox\" name={feature + type} className=\"custom-control-input\" id={feature + type} onChange={(e) => handleChange(e, type)} checked={features[feature]}/>\n                                    <label className=\"custom-control-label\" htmlFor={feature + type}>{feature}</label>\n                                </div>\n                            )\n                        }\n                    })\n                    : ''\n            }\n        </Container>\n    );\n};\n\nexport default React.memo(SelectionFeatures);\n\n// styles\n\nconst Container = styled.div`\n  overflow-x: auto;\n`","import React, {useState} from 'react';\nimport Selection from 'react-selection-box'\nimport {countryListAlpha} from \"../../../countries\";\nimport SelectionFeatures from \"../features\";\n\nconst SingleSelection = ({withDefault = false}) => {\n    const [features, setFeatures] = useState({\n        searchable: true,\n        cleanable: true,\n        loading: false,\n        disabled: false,\n        rtl: false,\n        countSelectedInCaption: 3\n    });\n\n    const {searchable, cleanable, loading, disabled, rtl} = features;\n\n    const options = () => {\n        let options = [];\n\n        Object.keys(countryListAlpha).forEach((key, i) => {\n            options.push({\n                value: key,\n                label: countryListAlpha[key],\n                checked: (withDefault && key === 'CA')\n            })\n        })\n\n        return options;\n    }\n\n    const handleChange = (value) => {\n        console.log(value)\n    }\n\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-lg-6\">\n\n                <Selection\n                    type=\"single\"\n                    name=\"countries\"\n                    label=\"Select Countries\"\n                    options={options()}\n                    onChange={handleChange}\n                    searchable={searchable}\n                    cleanable={cleanable}\n                    loading={loading}\n                    disabled={disabled}\n                    rtl={rtl}\n                    translates={{\n                        placeholder: {\n                            search: \"Search countries\",\n                        }\n                    }}\n                />\n            </div>\n\n            {\n                !withDefault &&\n                <div className=\"col-lg-12\">\n                    <SelectionFeatures\n                        features={features}\n                        setFeatures={setFeatures}\n                    />\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default React.memo(SingleSelection);\n","import React, {useState} from 'react';\nimport Selection from 'react-selection-box'\nimport {countryListAlpha} from \"../../../countries\";\nimport SelectionFeatures from \"../features\";\n\nconst MultipleSelection = ({withDefault = false}) => {\n    const [features2, setFeatures] = useState({\n        searchable: true,\n        cleanable: true,\n        loading: false,\n        disabled: false,\n        rtl: false,\n        countSelectedInCaption: 3\n    });\n\n    const {searchable, cleanable, loading, disabled, rtl, countSelectedInCaption} = features2;\n\n    const options = () => {\n        let options = [];\n\n        Object.keys(countryListAlpha).forEach((key, i) => {\n            options.push({\n                value: key,\n                label: countryListAlpha[key],\n                checked: (withDefault && (key === 'CA' || key === 'AU' || key === 'DE'))\n            })\n        })\n\n        return options;\n    }\n\n    const handleChange = (value) => {\n        console.log(value)\n    }\n\n    const translates = {\n        label: {\n            from: \"from\",\n            to: \"to\"\n        },\n        placeholder: {\n            search: \"Search countries\",\n        },\n        button: {\n            apply: \"Select\",\n        }\n    }\n\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-lg-6\">\n\n                <Selection\n                    type=\"multiple\"\n                    name=\"countries\"\n                    label=\"Select Countries\"\n                    options={options()}\n                    onChange={handleChange}\n                    countSelectedInCaption={countSelectedInCaption}\n                    searchable={searchable}\n                    cleanable={cleanable}\n                    loading={loading}\n                    disabled={disabled}\n                    rtl={rtl}\n                    translates={translates}\n                />\n            </div>\n\n            {\n                !withDefault &&\n                <div className=\"col-lg-12\">\n                    <SelectionFeatures\n                        features={features2}\n                        setFeatures={setFeatures}\n                        type=\"multiple\"/>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default React.memo(MultipleSelection);\n","import React from 'react';\nimport Code from \"../../code\";\n\nconst MultipleSelectionPre = ({withDefault = false}) => {\n    return (\n        <Code>\n            {\n                `\nimport React from 'react';\nimport Selection from 'react-selection-box'\nimport {countryListAlpha} from \"../../../countries\";\n\nconst MultipleSelection = () => {\n\n    const options = () => {\n        let options = [];\n\n        Object.keys(countryListAlpha).forEach((key, i) => {\n            options.push({\n                value: key,\n                label: countryListAlpha[key],\n                checked: ${withDefault ? '(key === \\'CA\\' || key === \\'AU\\' || key === \\'DE\\') // selected default countries' : 'false'}\n            })\n        })\n\n        return options;\n    }\n\n    const handleChange = (value) => {\n        console.log(value)\n    }\n\n    const translates = {\n        label: {\n            from: \"from\",\n            to: \"to\"\n        },\n        placeholder: {\n            search: \"Search countries\",\n        },\n        button: {\n            apply: \"Select\",\n        }\n    }\n    \n    return (\n        <div>\n\n            <Selection\n                type=\"multiple\"\n                name=\"countries\"\n                label=\"Select Countries\"\n                options={options()}\n                onChange={handleChange}\n                countSelectedInCaption={3}\n                translates={translates}\n            />\n\n\n        </div>\n    );\n};\n\nexport default MultipleSelection;\n                `\n            }\n        </Code>\n    );\n};\n\nexport default MultipleSelectionPre;\n","import React from 'react';\nimport Code from \"../../code\";\n\nconst RangeSelectionPre = ({withDefault = false}) => {\n    return (\n        <Code>\n            {\n                `\nimport React from 'react';\nimport Selection from 'react-selection-box'\n\nconst RangeSelection = () => {\n\n    const getPricesOptions = () => {\n        let options = [];\n\n        options.push({\n            value: null,\n            label: 'No matter',\n            checked: false\n        })\n\n        for (let i = 1; i <= 20; i++) {\n            options.push({\n                value: i * 1000,\n                label: '$' + i + 'K',\n                checked: false\n            })\n        }\n\n        return options;\n    }\n\n    const handleChange = (value) => {\n        console.log(value)\n    }\n\n    ${\n                    withDefault ?\n                        `\n    const defaultSelectedRange = {\n        min: {\n            value: 1000,\n            label: '$1K'\n        },\n        max: {\n            value: 3000,\n            label: '$3K'\n        },\n    }\n                        `\n                    : ''\n                }\n    \n    const translates = {\n        label: {\n            from: \"from\",\n            to: \"to\"\n        },\n        placeholder: {\n            min: \"min\",\n            max: \"max\",\n        },\n        button: {\n            apply: \"Select\",\n        }\n    }\n\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-lg-6\">\n\n                <Selection\n                    type=\"range\"\n                    name=\"prices\"\n                    label=\"Select Price\"\n                    options={getPricesOptions()}\n                    onChange={handleChange}\n                    translates={translates}\n                    ${withDefault ? `defaultSelectedRange={defaultSelectedRange}` : ''}\n                />\n\n            </div>\n        </div>\n    );\n};\n\nexport default RangeSelection;\n                `\n            }\n        </Code>\n    );\n};\n\nexport default RangeSelectionPre;\n","import React from 'react';\nimport Selection from 'react-selection-box'\n\nconst RangeSelection = ({withDefault = false}) => {\n\n    const getPricesOptions = () => {\n        let options = [];\n\n        options.push({\n            value: null,\n            label: 'No matter',\n            checked: false\n        })\n\n        for (let i = 1; i <= 20; i++) {\n            options.push({\n                value: i * 1000,\n                label: '$' + i + 'K',\n                checked: false\n            })\n        }\n\n        return options;\n    }\n\n    const handleChange = (value) => {\n        console.log(value)\n    }\n\n    const defaultSelectedRange = {\n        min: {\n            value: 1000,\n            label: '$1K'\n        },\n        max: {\n            value: 3000,\n            label: '$3K'\n        },\n    }\n\n    const translates = {\n        label: {\n            from: \"from\",\n            to: \"to\"\n        },\n        placeholder: {\n            min: \"min\",\n            max: \"max\",\n        },\n        button: {\n            apply: \"Select\",\n        }\n    }\n\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-lg-6\">\n\n                <Selection\n                    type=\"range\"\n                    name=\"prices\"\n                    label=\"Select Price\"\n                    options={getPricesOptions()}\n                    onChange={handleChange}\n                    defaultSelectedRange={withDefault ? defaultSelectedRange : {}}\n                    translates={translates}\n                />\n\n            </div>\n        </div>\n    );\n};\n\nexport default RangeSelection;\n","import React, {useState} from 'react';\nimport Selection from 'react-selection-box'\nimport {countryListAlpha} from \"../../../countries\";\n\nvar setTime = undefined;\n\nconst AsyncSingleSelection = () => {\n    const [autoComplete, setAutoComplete] = useState({\n        options: [],\n        loading: false,\n    });\n\n    const options = () => {\n        let options = [];\n\n        Object.keys(countryListAlpha).forEach((key, i) => {\n            options.push({\n                value: key,\n                label: countryListAlpha[key],\n                checked: false\n            })\n        })\n\n        return options;\n    }\n\n    const handleChangeAutocomplete = (pattern) => {\n        setAutoComplete({\n            options: [],\n            loading: true\n        });\n\n        if (setTime) {\n            clearTimeout(setTime)\n        }\n\n        setTime = setTimeout(function () {\n            let searchList = [];\n\n            if (pattern) {\n                searchList = options().filter((item) => {\n                    return (item.label.toString().toLowerCase().search(pattern) !== -1);\n                });\n            }\n\n            setAutoComplete({\n                options: searchList,\n                loading: false\n            });\n        }, 1000)\n\n    }\n\n    const handleChange = (value) => {\n        console.log(value)\n    }\n\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-lg-6\">\n\n                <Selection\n                    type=\"single\"\n                    name=\"countries\"\n                    label=\"Select Countries\"\n                    options={autoComplete.options}\n                    loading={autoComplete.loading}\n                    autocomplete={true}\n                    onChange={handleChange}\n                    onChangeAutocomplete={handleChangeAutocomplete}\n                    translates={{\n                        placeholder: {\n                            search: \"Search countries\",\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(AsyncSingleSelection);\n","import React from 'react';\nimport Code from \"../../code\";\n\nconst AsyncMultipleSelectionPre = () => {\n    return (\n        <Code>\n            {\n                `\nimport React, {useState} from 'react';\nimport Selection from 'react-selection-box'\nimport {countryListAlpha} from \"../../../countries\";\n\nvar setTime = undefined;\n\nconst AsyncMultipleSelection = () => {\n    const [autoComplete, setAutoComplete] = useState({\n        options: [],\n        loading: false\n    });\n\n    const options = () => {\n        let options = [];\n\n        Object.keys(countryListAlpha).forEach((key, i) => {\n            options.push({\n                value: key,\n                label: countryListAlpha[key],\n                checked: false\n            })\n        })\n\n        return options;\n    }\n\n    const handleChangeAutocomplete = (pattern) => {\n        setAutoComplete({\n            options: [],\n            loading: true\n        });\n\n        if (setTime) {\n            clearTimeout(setTime)\n        }\n\n        setTime = setTimeout(function () {\n            let searchList = [];\n\n            if (pattern) {\n                searchList = options().filter((item) => {\n                    return (item.label.toString().toLowerCase().search(pattern) !== -1);\n                });\n            }\n\n            setAutoComplete({\n                options: searchList,\n                loading: false\n            });\n        }, 1000)\n\n    }\n\n    const handleChange = (value) => {\n        console.log(value)\n    }\n\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-lg-6\">\n\n                <Selection\n                    type=\"multiple\"\n                    name=\"countries\"\n                    label=\"Select Countries\"\n                    autocomplete={true}\n                    options={autoComplete.options}\n                    loading={autoComplete.loading}\n                    onChange={handleChange}\n                    onChangeAutocomplete={handleChangeAutocomplete}\n                    translates={{\n                        placeholder: {\n                            search: \"Search countries\"\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(AsyncMultipleSelection);\n                `\n            }\n        </Code>\n    );\n};\n\nexport default React.memo(AsyncMultipleSelectionPre);\n","import React, {useState} from 'react';\nimport Selection from 'react-selection-box'\nimport {countryListAlpha} from \"../../../countries\";\n\nvar setTime = undefined;\n\nconst AsyncMultipleSelection = () => {\n    const [autoComplete, setAutoComplete] = useState({\n        options: [],\n        loading: false,\n    });\n\n    const options = () => {\n        let options = [];\n\n        Object.keys(countryListAlpha).forEach((key, i) => {\n            options.push({\n                value: key,\n                label: countryListAlpha[key],\n                checked: false\n            })\n        })\n\n        return options;\n    }\n\n    const handleChangeAutocomplete = (pattern) => {\n        setAutoComplete({\n            options: [],\n            loading: true\n        });\n\n        if (setTime) {\n            clearTimeout(setTime)\n        }\n\n        setTime = setTimeout(function () {\n            let searchList = [];\n\n            if (pattern) {\n                searchList = options().filter((item) => {\n                    return (item.label.toString().toLowerCase().search(pattern) !== -1);\n                });\n            }\n\n            setAutoComplete({\n                options: searchList,\n                loading: false\n            });\n        }, 1000)\n\n    }\n\n    const handleChange = (value) => {\n        console.log(value)\n    }\n\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-lg-6\">\n\n                <Selection\n                    type=\"multiple\"\n                    name=\"countries\"\n                    label=\"Select Countries\"\n                    options={autoComplete.options}\n                    loading={autoComplete.loading}\n                    autocomplete={true}\n                    onChange={handleChange}\n                    onChangeAutocomplete={handleChangeAutocomplete}\n                    translates={{\n                        placeholder: {\n                            search: \"Search countries\",\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(AsyncMultipleSelection);\n","import React from 'react';\nimport ViewRecourse from \"../components/view_resource\";\nimport SingleSelectionPre from \"../components/examples/single/pre\";\nimport SingleSelection from \"../components/examples/single/fullExample\";\nimport MultipleSelection from \"../components/examples/multiple/fullExample\";\nimport MultipleSelectionPre from \"../components/examples/multiple/pre\";\nimport NextPage from \"../components/next\";\nimport RangeSelectionPre from \"../components/examples/range/pre\";\nimport RangeSelection from \"../components/examples/range/fullExample\";\nimport AsyncSingleSelection from \"../components/examples/single/asyncExample\";\nimport AsyncSingleSelectionPre from \"../components/examples/single/asyncPre\";\nimport AsyncMultipleSelectionPre from \"../components/examples/single/asyncPre\";\nimport AsyncMultipleSelection from \"../components/examples/multiple/asyncExample\";\n\nconst Examples = () => {\n    return (\n        <div className=\"my-3\">\n            <h2 className=\"\">Examples</h2>\n            <p className=\"\">\n                Is a example for any select type.\n            </p>\n\n            <div className=\"mt-5\">\n                <ViewRecourse title=\"Single Select\">\n                    <SingleSelectionPre/>\n                </ViewRecourse>\n\n\n                <SingleSelection/>\n\n            </div>\n\n            <hr className=\"my-5\"/>\n\n            <div className=\"\">\n                <ViewRecourse title=\"Multiple Select\">\n                    <MultipleSelectionPre/>\n                </ViewRecourse>\n\n\n                <MultipleSelection/>\n\n            </div>\n\n            <hr className=\"my-5\"/>\n\n            <div className=\"\">\n                <ViewRecourse title=\"Range Select\">\n                    <RangeSelectionPre/>\n                </ViewRecourse>\n\n\n                <RangeSelection/>\n\n            </div>\n\n            <hr className=\"my-5\"/>\n\n            <div className=\"\">\n                <ViewRecourse title=\"Async (autocomplete) Single Select\">\n                    <AsyncSingleSelectionPre/>\n                </ViewRecourse>\n\n\n                <AsyncSingleSelection/>\n\n            </div>\n\n            <hr className=\"my-5\"/>\n\n            <div className=\"\">\n                <ViewRecourse title=\"Async (autocomplete) Multiple Select\">\n                    <AsyncMultipleSelectionPre/>\n                </ViewRecourse>\n\n\n                <AsyncMultipleSelection/>\n\n            </div>\n\n            <hr className=\"my-5\"/>\n\n            <div className=\"\">\n                <ViewRecourse title=\"Single Select with default option selected\">\n                    <SingleSelectionPre withDefault/>\n                </ViewRecourse>\n\n\n                <SingleSelection withDefault/>\n\n            </div>\n\n            <hr className=\"my-5\"/>\n\n            <div className=\"\">\n                <ViewRecourse title=\"Multiple Select with default options selected\">\n                    <MultipleSelectionPre withDefault/>\n                </ViewRecourse>\n\n\n                <MultipleSelection withDefault/>\n\n            </div>\n\n            <hr className=\"my-5\"/>\n\n            <div className=\"\">\n                <ViewRecourse title=\"Range Select with default range\">\n                    <RangeSelectionPre withDefault/>\n                </ViewRecourse>\n\n\n                <RangeSelection withDefault/>\n\n            </div>\n\n            <NextPage\n                title=\"Props\"\n                url=\"/react-selection-box/props\"\n            />\n        </div>\n    );\n};\n\nexport default React.memo(Examples);\n"],"sourceRoot":""}