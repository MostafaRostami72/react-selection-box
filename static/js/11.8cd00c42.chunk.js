(this["webpackJsonpreact-selection-box-example"]=this["webpackJsonpreact-selection-box-example"]||[]).push([[11],{293:function(e,n,a){"use strict";a.r(n);var t,l=a(0),o=a.n(l),i=a(59),c=a(46),s=a(1),r=function(e){var n=e.withDefault,a=void 0!==n&&n;return Object(s.jsx)(c.a,{children:"\nimport React from 'react';\nimport Selection from 'react-selection-box'\nimport {countryListAlpha} from \"../../../countries\";\n\nconst SingleSelection = () => {\n\n    const options = () => {\n        let options = [];\n\n        Object.keys(countryListAlpha).forEach((key, i) => {\n            options.push({\n                value: key,\n                label: countryListAlpha[key],\n                checked: ".concat(a?"(key === 'CA') // selected default Canada":"false",'\n            })\n        })\n\n        return options;\n    }\n\n    const handleChange = (value) => {\n        console.log(value)\n    }\n\n    return (\n        <div>\n\n            <Selection\n                type="single"\n                name="countries"\n                label="Select Countries"\n                options={options()}\n                onChange={handleChange}\n                translates={{\n                    placeholder: {\n                        search: "Search countries"\n                    }\n                }}\n            />\n\n\n        </div>\n    );\n};\n\nexport default SingleSelection;\n                ')})},u=o.a.memo(r),d=a(22),h=a(48),m={AF:"Afghanistan",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua and Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas (the)",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia (Plurinational State of)",BQ:"Bonaire, Sint Eustatius and Saba",BA:"Bosnia and Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory (the)",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",CV:"Cabo Verde",KH:"Cambodia",CM:"Cameroon",CA:"Canada",KY:"Cayman Islands (the)",CF:"Central African Republic (the)",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands (the)",CO:"Colombia",KM:"Comoros (the)",CD:"Congo (the Democratic Republic of the)",CG:"Congo (the)",CK:"Cook Islands (the)",CR:"Costa Rica",HR:"Croatia",CU:"Cuba",CW:"Cura\xe7ao",CY:"Cyprus",CZ:"Czechia",CI:"C\xf4te d'Ivoire",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic (the)",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",SZ:"Eswatini",ET:"Ethiopia",FK:"Falkland Islands (the) [Malvinas]",FO:"Faroe Islands (the)",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories (the)",GA:"Gabon",GM:"Gambia (the)",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island and McDonald Islands",VA:"Holy See (the)",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran (Islamic Republic of)",IQ:"Iraq",IE:"Ireland",IM:"Isle of Man",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KP:"Korea (the Democratic People's Republic of)",KR:"Korea (the Republic of)",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's Democratic Republic (the)",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands (the)",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia (Federated States of)",MD:"Moldova (the Republic of)",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands (the)",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger (the)",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",MP:"Northern Mariana Islands (the)",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestine, State of",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines (the)",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",MK:"Republic of North Macedonia",RO:"Romania",RU:"Russian Federation (the)",RW:"Rwanda",RE:"R\xe9union",BL:"Saint Barth\xe9lemy",SH:"Saint Helena, Ascension and Tristan da Cunha",KN:"Saint Kitts and Nevis",LC:"Saint Lucia",MF:"Saint Martin (French part)",PM:"Saint Pierre and Miquelon",VC:"Saint Vincent and the Grenadines",WS:"Samoa",SM:"San Marino",ST:"Sao Tome and Principe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SX:"Sint Maarten (Dutch part)",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia and the South Sandwich Islands",SS:"South Sudan",ES:"Spain",LK:"Sri Lanka",SD:"Sudan (the)",SR:"Suriname",SJ:"Svalbard and Jan Mayen",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania, United Republic of",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad and Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks and Caicos Islands (the)",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates (the)",GB:"United Kingdom of Great Britain and Northern Ireland (the)",UM:"United States Minor Outlying Islands (the)",US:"United States of America (the)",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VE:"Venezuela (Bolivarian Republic of)",VN:"Viet Nam",VG:"Virgin Islands (British)",VI:"Virgin Islands (U.S.)",WF:"Wallis and Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe",AX:"\xc5land Islands"},b=a(49),p=a(50),j=function(e){var n=e.features,a=e.setFeatures,t=e.type,l=void 0===t?"single":t,o=function(e,t){var o=e.target,i=o.name,c=o.value,s=o.checked,r=i.replaceAll(l,""),u=JSON.parse(JSON.stringify(n));u[r]="countSelectedInCaption"===r?c:s,a(u)};return Object(s.jsx)(f,{className:"mt-3 d-flex align-items-center",children:n?Object.keys(n).map((function(e,a){return"multiple"===l&&"countSelectedInCaption"===e?Object(s.jsxs)("div",{className:"form-group border-left ml-2 pl-3",children:[Object(s.jsx)("label",{htmlFor:e,children:"Show selected in caption"}),Object(s.jsx)("input",{type:"number",className:"form-control",name:e+l,id:e+l,value:n[e],onChange:function(e){return o(e)}})]}):"countSelectedInCaption"!==e?Object(s.jsxs)("div",{className:"custom-control custom-checkbox mr-2",children:[Object(s.jsx)("input",{type:"checkbox",name:e+l,className:"custom-control-input",id:e+l,onChange:function(e){return o(e)},checked:n[e]}),Object(s.jsx)("label",{className:"custom-control-label",htmlFor:e+l,children:e})]},a):void 0})):""})},S=o.a.memo(j),f=p.a.div(t||(t=Object(b.a)(["\n  overflow-x: auto;\n"]))),g=function(e){var n=e.withDefault,a=void 0!==n&&n,t=Object(l.useState)({searchable:!0,cleanable:!0,loading:!1,disabled:!1,rtl:!1,countSelectedInCaption:3}),o=Object(d.a)(t,2),i=o[0],c=o[1],r=i.searchable,u=i.cleanable,b=i.loading,p=i.disabled,j=i.rtl;return Object(s.jsxs)("div",{className:"row mt-3",children:[Object(s.jsx)("div",{className:"col-lg-6",children:Object(s.jsx)(h.a,{type:"single",name:"countries",label:"Select Countries",options:function(){var e=[];return Object.keys(m).forEach((function(n,t){e.push({value:n,label:m[n],checked:a&&"CA"===n})})),e}(),onChange:function(e){console.log(e)},searchable:r,cleanable:u,loading:b,disabled:p,rtl:j,translates:{placeholder:{search:"Search countries"}}})}),!a&&Object(s.jsx)("div",{className:"col-lg-12",children:Object(s.jsx)(S,{features:i,setFeatures:c})})]})},O=o.a.memo(g),v=function(e){var n=e.withDefault,a=void 0!==n&&n,t=Object(l.useState)({searchable:!0,cleanable:!0,loading:!1,disabled:!1,rtl:!1,countSelectedInCaption:3}),o=Object(d.a)(t,2),i=o[0],c=o[1],r=i.searchable,u=i.cleanable,b=i.loading,p=i.disabled,j=i.rtl,f=i.countSelectedInCaption;return Object(s.jsxs)("div",{className:"row mt-3",children:[Object(s.jsx)("div",{className:"col-lg-6",children:Object(s.jsx)(h.a,{type:"multiple",name:"countries",label:"Select Countries",options:function(){var e=[];return Object.keys(m).forEach((function(n,t){e.push({value:n,label:m[n],checked:a&&("CA"===n||"AU"===n||"DE"===n)})})),e}(),onChange:function(e){console.log(e)},countSelectedInCaption:f,searchable:r,cleanable:u,loading:b,disabled:p,rtl:j,translates:{label:{from:"from",to:"to"},placeholder:{search:"Search countries"},button:{apply:"Select"}}})}),!a&&Object(s.jsx)("div",{className:"col-lg-12",children:Object(s.jsx)(S,{features:i,setFeatures:c,type:"multiple"})})]})},C=o.a.memo(v),x=function(e){var n=e.withDefault,a=void 0!==n&&n;return Object(s.jsx)(c.a,{children:"\nimport React from 'react';\nimport Selection from 'react-selection-box'\nimport {countryListAlpha} from \"../../../countries\";\n\nconst MultipleSelection = () => {\n\n    const options = () => {\n        let options = [];\n\n        Object.keys(countryListAlpha).forEach((key, i) => {\n            options.push({\n                value: key,\n                label: countryListAlpha[key],\n                checked: ".concat(a?"(key === 'CA' || key === 'AU' || key === 'DE') // selected default countries":"false",'\n            })\n        })\n\n        return options;\n    }\n\n    const handleChange = (value) => {\n        console.log(value)\n    }\n\n    const translates = {\n        label: {\n            from: "from",\n            to: "to"\n        },\n        placeholder: {\n            search: "Search countries",\n        },\n        button: {\n            apply: "Select",\n        }\n    }\n    \n    return (\n        <div>\n\n            <Selection\n                type="multiple"\n                name="countries"\n                label="Select Countries"\n                options={options()}\n                onChange={handleChange}\n                countSelectedInCaption={3}\n                translates={translates}\n            />\n\n\n        </div>\n    );\n};\n\nexport default MultipleSelection;\n                ')})},y=a(47),N=function(e){var n=e.withDefault,a=void 0!==n&&n;return Object(s.jsx)(c.a,{children:"\nimport React from 'react';\nimport Selection from 'react-selection-box'\n\nconst RangeSelection = () => {\n\n    const getPricesOptions = () => {\n        let options = [];\n\n        options.push({\n            value: null,\n            label: 'No matter',\n            checked: false\n        })\n\n        for (let i = 1; i <= 20; i++) {\n            options.push({\n                value: i * 1000,\n                label: '$' + i + 'K',\n                checked: false\n            })\n        }\n\n        return options;\n    }\n\n    const handleChange = (value) => {\n        console.log(value)\n    }\n\n    ".concat(a?"\n    const defaultSelectedRange = {\n        min: {\n            value: 1000,\n            label: '$1K'\n        },\n        max: {\n            value: 3000,\n            label: '$3K'\n        },\n    }\n                        ":"",'\n    \n    const translates = {\n        label: {\n            from: "from",\n            to: "to"\n        },\n        placeholder: {\n            min: "min",\n            max: "max",\n        },\n        button: {\n            apply: "Select",\n        }\n    }\n\n    return (\n        <div className="row mt-3">\n            <div className="col-lg-6">\n\n                <Selection\n                    type="range"\n                    name="prices"\n                    label="Select Price"\n                    options={getPricesOptions()}\n                    onChange={handleChange}\n                    translates={translates}\n                    ').concat(a?"defaultSelectedRange={defaultSelectedRange}":"","\n                />\n\n            </div>\n        </div>\n    );\n};\n\nexport default RangeSelection;\n                ")})},M=function(e){var n=e.withDefault,a=void 0!==n&&n;return Object(s.jsx)("div",{className:"row mt-3",children:Object(s.jsx)("div",{className:"col-lg-6",children:Object(s.jsx)(h.a,{type:"range",name:"prices",label:"Select Price",options:function(){var e=[];e.push({value:null,label:"No matter",checked:!1});for(var n=1;n<=20;n++)e.push({value:1e3*n,label:"$"+n+"K",checked:!1});return e}(),onChange:function(e){console.log(e)},defaultSelectedRange:a?{min:{value:1e3,label:"$1K"},max:{value:3e3,label:"$3K"}}:{},translates:{label:{from:"from",to:"to"},placeholder:{min:"min",max:"max"},button:{apply:"Select"}}})})})},A=void 0,I=function(){var e=Object(l.useState)({options:[],loading:!1}),n=Object(d.a)(e,2),a=n[0],t=n[1];return Object(s.jsx)("div",{className:"row mt-3",children:Object(s.jsx)("div",{className:"col-lg-6",children:Object(s.jsx)(h.a,{type:"single",name:"countries",label:"Select Countries",options:a.options,loading:a.loading,autocomplete:!0,onChange:function(e){console.log(e)},onChangeAutocomplete:function(e){t({options:[],loading:!0}),A&&clearTimeout(A),A=setTimeout((function(){var n=[];e&&(n=function(){var e=[];return Object.keys(m).forEach((function(n,a){e.push({value:n,label:m[n],checked:!1})})),e}().filter((function(n){return-1!==n.label.toString().toLowerCase().search(e)}))),t({options:n,loading:!1})}),1e3)},translates:{placeholder:{search:"Search countries"}}})})})},T=o.a.memo(I),k=function(){return Object(s.jsx)(c.a,{children:'\nimport React, {useState} from \'react\';\nimport Selection from \'react-selection-box\'\nimport {countryListAlpha} from "../../../countries";\n\nvar setTime = undefined;\n\nconst AsyncMultipleSelection = () => {\n    const [autoComplete, setAutoComplete] = useState({\n        options: [],\n        loading: false\n    });\n\n    const options = () => {\n        let options = [];\n\n        Object.keys(countryListAlpha).forEach((key, i) => {\n            options.push({\n                value: key,\n                label: countryListAlpha[key],\n                checked: false\n            })\n        })\n\n        return options;\n    }\n\n    const handleChangeAutocomplete = (pattern) => {\n        setAutoComplete({\n            options: [],\n            loading: true\n        });\n\n        if (setTime) {\n            clearTimeout(setTime)\n        }\n\n        setTime = setTimeout(function () {\n            let searchList = [];\n\n            if (pattern) {\n                searchList = options().filter((item) => {\n                    return (item.label.toString().toLowerCase().search(pattern) !== -1);\n                });\n            }\n\n            setAutoComplete({\n                options: searchList,\n                loading: false\n            });\n        }, 1000)\n\n    }\n\n    const handleChange = (value) => {\n        console.log(value)\n    }\n\n    return (\n        <div className="row mt-3">\n            <div className="col-lg-6">\n\n                <Selection\n                    type="multiple"\n                    name="countries"\n                    label="Select Countries"\n                    autocomplete={true}\n                    options={autoComplete.options}\n                    loading={autoComplete.loading}\n                    onChange={handleChange}\n                    onChangeAutocomplete={handleChangeAutocomplete}\n                    translates={{\n                        placeholder: {\n                            search: "Search countries"\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(AsyncMultipleSelection);\n                '})},G=o.a.memo(k),B=void 0,R=function(){var e=Object(l.useState)({options:[],loading:!1}),n=Object(d.a)(e,2),a=n[0],t=n[1];return Object(s.jsx)("div",{className:"row mt-3",children:Object(s.jsx)("div",{className:"col-lg-6",children:Object(s.jsx)(h.a,{type:"multiple",name:"countries",label:"Select Countries",options:a.options,loading:a.loading,autocomplete:!0,onChange:function(e){console.log(e)},onChangeAutocomplete:function(e){t({options:[],loading:!0}),B&&clearTimeout(B),B=setTimeout((function(){var n=[];e&&(n=function(){var e=[];return Object.keys(m).forEach((function(n,a){e.push({value:n,label:m[n],checked:!1})})),e}().filter((function(n){return-1!==n.label.toString().toLowerCase().search(e)}))),t({options:n,loading:!1})}),1e3)},translates:{placeholder:{search:"Search countries"}}})})})},L=o.a.memo(R),w=function(){return Object(s.jsxs)("div",{className:"my-3",children:[Object(s.jsx)("h2",{className:"",children:"Examples"}),Object(s.jsx)("p",{className:"",children:"Is a example for any select type."}),Object(s.jsxs)("div",{className:"mt-5",children:[Object(s.jsx)(i.a,{title:"Single Select",children:Object(s.jsx)(u,{})}),Object(s.jsx)(O,{})]}),Object(s.jsx)("hr",{className:"my-5"}),Object(s.jsxs)("div",{className:"",children:[Object(s.jsx)(i.a,{title:"Multiple Select",children:Object(s.jsx)(x,{})}),Object(s.jsx)(C,{})]}),Object(s.jsx)("hr",{className:"my-5"}),Object(s.jsxs)("div",{className:"",children:[Object(s.jsx)(i.a,{title:"Range Select",children:Object(s.jsx)(N,{})}),Object(s.jsx)(M,{})]}),Object(s.jsx)("hr",{className:"my-5"}),Object(s.jsxs)("div",{className:"",children:[Object(s.jsx)(i.a,{title:"Async (autocomplete) Single Select",children:Object(s.jsx)(G,{})}),Object(s.jsx)(T,{})]}),Object(s.jsx)("hr",{className:"my-5"}),Object(s.jsxs)("div",{className:"",children:[Object(s.jsx)(i.a,{title:"Async (autocomplete) Multiple Select",children:Object(s.jsx)(G,{})}),Object(s.jsx)(L,{})]}),Object(s.jsx)("hr",{className:"my-5"}),Object(s.jsxs)("div",{className:"",children:[Object(s.jsx)(i.a,{title:"Single Select with default option selected",children:Object(s.jsx)(u,{withDefault:!0})}),Object(s.jsx)(O,{withDefault:!0})]}),Object(s.jsx)("hr",{className:"my-5"}),Object(s.jsxs)("div",{className:"",children:[Object(s.jsx)(i.a,{title:"Multiple Select with default options selected",children:Object(s.jsx)(x,{withDefault:!0})}),Object(s.jsx)(C,{withDefault:!0})]}),Object(s.jsx)("hr",{className:"my-5"}),Object(s.jsxs)("div",{className:"",children:[Object(s.jsx)(i.a,{title:"Range Select with default range",children:Object(s.jsx)(N,{withDefault:!0})}),Object(s.jsx)(M,{withDefault:!0})]}),Object(s.jsx)(y.a,{title:"Props",url:"/react-selection-box/props"})]})};n.default=o.a.memo(w)}}]);
//# sourceMappingURL=11.8cd00c42.chunk.js.map